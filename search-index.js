var N = null;var searchIndex = {};
searchIndex["cs4500"]={"doc":"Software development.","items":[],"paths":[]};
searchIndex["evolution"]={"doc":"An Evolution (game) competition library.","items":[[0,"ext","evolution","Extension methods provided by traits for built-in types.",N,N],[3,"AroundFromIter","evolution::ext","An iterator which starts at a given index and wraps around…",N,N],[3,"AroundFromMutIter","","An iterator which starts at a given index and wraps around…",N,N],[8,"AroundFrom","","Get an around from iterator from a finite collection.",N,N],[10,"around_from","","",0,[[["self"],["usize"]],["aroundfromiter"]]],[8,"AroundFromMut","","Get an around from mut iterator from a finite collection.",N,N],[10,"around_from_mut","","",1,[[["self"],["usize"]],["aroundfrommutiter"]]],[8,"Dequeue","","Remove the element at the first index of an indexed…",N,N],[10,"dequeue","","",2,[[["self"]],["option"]]],[0,"object","evolution","Objects of the game, like a card or a species.",N,N],[3,"FoodToken","evolution::object","A structure enforcing single ownership over all food…",N,N],[3,"Board","","An owned board with food tokens, and cards which were…",N,N],[3,"Card","","A card in evolution.",N,N],[12,"0","","",3,N],[12,"1","","",3,N],[3,"Domain","","A collection of species for a player.",N,N],[3,"Player","","The internal state of a player, including private…",N,N],[3,"Species","","A species which evolves, feeds, grows, and fluctuates in…",N,N],[4,"Placement","","A placement describes where players can place a new…",N,N],[13,"Left","","Indicates a placement of a new species on the far left of…",4,N],[13,"Right","","Indicates a placement of a new species on the far right of…",4,N],[4,"Trait","","A trait which a trait card may have. These are modifiers…",N,N],[13,"Carnivore","","Carnivore must attack to eat during the feeding stage.",5,N],[13,"Ambush","","Ambush overcomes a Warning Call during an attack.",5,N],[13,"Burrowing","","Burrowing deflects an attack when it has a food supply…",5,N],[13,"Climbing","","Climbing prevents an attack unless the Carnivore also has…",5,N],[13,"Cooperation","","Cooperation feeds the species to its right one token of…",5,N],[13,"FatTissue","","Fat Tissue allows a species to store as many food tokens…",5,N],[13,"Fertile","","Fertile adds one animal to the population when the food…",5,N],[13,"Foraging","","Foraging enables this species to eat two tokens of food…",5,N],[13,"HardShell","","Hard Shell prevents an attack unless the attacker is at…",5,N],[13,"Herding","","Herding stops attacks from Carnivore species whose…",5,N],[13,"Horns","","Horns kills one animal of an attacking Carnivore species.",5,N],[13,"LongNeck","","Long Neck adds one food token when the food cards are…",5,N],[13,"PackHunting","","Pack Hunting adds this species’ population size to its…",5,N],[13,"Scavenger","","Scavenger eats one food token every time a Carnivore eats…",5,N],[13,"Symbiosis","","Symbiosis prevents an attack if this species has a…",5,N],[13,"WarningCall","","Warning Call prevents an attack from a Carnivore on both…",5,N],[11,"food","","Returns the amount of food available on the board. This is…",6,N],[11,"push_food","","Move a token onto the board.",6,[[["self"],["foodtoken"]]]],[11,"push_foods","","Move many tokens onto the board.",6,[[["self"],["vec",["foodtoken"]]]]],[11,"pop_food","","Get a single food token, if available. An empty watering…",6,[[["self"]],["option",["foodtoken"]]]],[11,"pop_foods","","Removes many food tokens from the board. This function…",6,[[["self"],["u64"]],["option",["vec"]]]],[11,"cards","","Get the cards used as food for this round.",6,[[["self"]],["option"]]],[11,"cards_mut","","Get the cards used as food for this round.",6,[[["self"]],["option"]]],[11,"add_card","","Adds a single card to the board to be used as food.",6,[[["self"],["card"]]]],[11,"set_cards","","Set the cards used as food for this round.",6,[[["self"],["vec",["card"]]]]],[11,"clear_cards","","Clears the cards used as food for this round.",6,[[["self"]]]],[11,"deck","","Returns a new deck of all the cards for a game. This is…",3,[[],["vec",["card"]]]],[11,"trait_type","","The trait of this card. If this card is used to evolve a…",3,[[["self"]],["trait"]]],[11,"food_value","","The number of food tokens this card is worth (may be…",3,[[["self"]],["i64"]]],[11,"is_carnivore","","Returns true if this card has the carnivore trait.",3,[[["self"]],["bool"]]],[11,"is_non_carnivore","","Returns true if this card does not have the carnivore trait.",3,[[["self"]],["bool"]]],[11,"add","","Add a new species to the player, given the placement for…",7,[[["self"],["placement"]],["species"]]],[11,"kill","","Kill one population of the given species in this domain,…",7,[[["self"],["usize"]],["result",["bool"]]]],[11,"cull","","Cull all the species in this domain, removing extinct…",7,[[["self"]],["result",["usize"]]]],[11,"take_food","","Take all of the food from all of the species and return it.",7,[[["self"]],["vec",["foodtoken"]]]],[11,"new","","Create a new player with the given identifier. The…",8,[[["id"]],["self"]]],[11,"id","","Returns a player's identifier.",8,[[["self"]],["id"]]],[11,"score","","Returns the player's score.",8,[[["self"]],["u64"]]],[11,"domain","","Returns a reference to the player's `Domain` containing…",8,[[["self"]],["domain"]]],[11,"domain_mut","","Returns a mutable reference to the player's domain.",8,[[["self"]],["domain"]]],[11,"bag","","Returns a view of this player's food tokens.",8,N],[11,"bag_food","","Digests all of the food in this player's domain, and moves…",8,[[["self"]]]],[11,"hand","","Returns this player's hand.",8,N],[11,"push_card","","Accepts a single card into this player's hand, taking…",8,[[["self"],["card"]]]],[11,"push_cards","","Adds the given cards to this player's hand.",8,[[["self"],["vec",["card"]]]]],[11,"remove_card","","Remove the given card from this player's hand, returning it.",8,[[["self"],["usize"]],["card"]]],[11,"population","","Returns the current population of this species. If this…",9,[[["self"]],["u64"]]],[11,"is_extinct","","Returns true if this species is extinct.",9,[[["self"]],["bool"]]],[11,"breed","","Increase the population of this species by one. This…",9,[[["self"]],["result",["u64"]]]],[11,"kill","","Kill one this species, removing 1 food from the species if…",9,[[["self"]],["result",["bool"]]]],[11,"cull","","Kills of as many of this species as needed to make the…",9,[[["self"]],["result",["bool"]]]],[11,"body_size","","Returns the body size for this species.",9,[[["self"]],["u64"]]],[11,"grow","","Grow a species, increasing their body size by one. This…",9,[[["self"]],["result",["u64"]]]],[11,"traits","","Returns the traits in the order they were added.",9,N],[11,"has_trait","","Returns true if this species has the given trait.",9,[[["self"],["trait"]],["bool"]]],[11,"evolve","","Give this species the given trait. This function returns…",9,[[["self"],["trait"]],["result"]]],[11,"exchange_trait","","Swaps a trait in-place for this species. Returns an error…",9,[[["self"],["usize"],["trait"]],["result"]]],[11,"food","","Returns the amount of food this species currently has.",9,N],[11,"can_eat","","Returns true if this species can eat one or more food…",9,[[["self"]],["bool"]]],[11,"eats","","Returns the number of eats a player's species should…",9,[[["self"]],["usize"]]],[11,"eat","","Directs this species to eat a single food token. If the…",9,[[["self"],["foodtoken"]],["result",["foodtoken"]]]],[11,"take_food","","Return all the food from this species.",9,[[["self"]],["vec",["foodtoken"]]]],[11,"fat","","Returns the amount of fat food stored.",9,N],[11,"can_store","","Returns true if this species can store the given number of…",9,[[["self"]],["option",["u64"]]]],[11,"store","","Store the given food tokens to this species fat. This…",9,[[["self"],["vec",["foodtoken"]]],["result"]]],[11,"digest_fat","","Move food from fat to food. This function can only be…",9,[[["self"]]]],[11,"can_attack","","Returns true if this species can attack the given target…",9,[[["self"],["species"],["option",["species"]],["option",["species"]]],["bool"]]],[17,"MAX_POPULATION","","The maximum population a species can have.",N,N],[17,"MAX_BODY_SIZE","","The maximum body size a species can have.",N,N],[17,"MAX_TRAITS","","The maximum number of traits a species may have.",N,N],[17,"HARD_SHELL_PROTECTION","","The effective addeded body size the hard shell trait adds,…",N,N],[17,"NUM_CARNIVORE_CARDS","","The number of carnivore trait cards in a deck.",N,N],[17,"NUM_VEGITARIAN_CARDS","","The number of each non-carnivore cards in a deck.",N,N],[17,"CARDS_PER_EXTINCTION","","The number of cards awarded to a player for each extinct…",N,N],[0,"interact","evolution","Data and methods for required interactions for the game.",N,N],[3,"PlayerObservation","evolution::interact","The visable state of a player.",N,N],[12,"id","","",10,N],[12,"domain","","",10,N],[12,"bag","","",10,N],[3,"BoardObservation","","The observed view of a board, with just the food of a board.",N,N],[12,"food","","",11,N],[3,"ActionObservation","","",N,N],[12,"current_player","","",12,N],[12,"before","","",12,N],[12,"after","","",12,N],[3,"FeedObservation","","",N,N],[12,"current_player","","",13,N],[12,"opponents","","",13,N],[12,"board","","",13,N],[3,"DealObservation","","",N,N],[12,"board","","",14,N],[12,"player","","",14,N],[12,"hand","","",14,N],[3,"ActionChoice","","A choice how to use cards for a round.",N,N],[12,"food_card","","",15,N],[12,"population_growths","","",15,N],[12,"body_growths","","",15,N],[12,"boards","","",15,N],[12,"traits","","",15,N],[3,"Growth","","A choice to grow a species in either body size or…",N,N],[12,"species_index","","",16,N],[12,"card_index","","",16,N],[3,"BoardTrade","","A choice to trade a card for a species board, and…",N,N],[12,"card_index","","",17,N],[12,"trait_card_indeces","","",17,N],[3,"TraitTrade","","A choice to swap out a trait on a species for a new one.",N,N],[12,"species_index","","",18,N],[12,"trait_index","","",18,N],[12,"replacement_index","","",18,N],[4,"FeedChoice","","A choice of a species to feed.",N,N],[13,"Abstain","","This represents a player's choice to not attack or store.",19,N],[13,"Feed","","Contains the index of the `Species` the player would like…",19,N],[13,"Store","","Contains the index of the `Species` the player would like…",19,N],[13,"Attack","","Contains in order, the current player's attacking species…",19,N],[0,"observe","","Public to get around…",N,N],[3,"PlayerObservation","evolution::interact::observe","The visable state of a player.",N,N],[12,"id","","",10,N],[12,"domain","","",10,N],[12,"bag","","",10,N],[3,"BoardObservation","","The observed view of a board, with just the food of a board.",N,N],[12,"food","","",11,N],[3,"DealObservation","","",N,N],[12,"board","","",14,N],[12,"player","","",14,N],[12,"hand","","",14,N],[3,"ActionObservation","","",N,N],[12,"current_player","","",12,N],[12,"before","","",12,N],[12,"after","","",12,N],[3,"FeedObservation","","",N,N],[12,"current_player","","",13,N],[12,"opponents","","",13,N],[12,"board","","",13,N],[8,"Observation","","An observation of some data.",N,N],[8,"Observe","","Asking some object for an observation of itself.",N,N],[10,"observe","","Return the observation of this data.",20,[[["self"]],["o"]]],[0,"choose","evolution::interact","Public to get around…",N,N],[3,"ActionChoice","evolution::interact::choose","A choice how to use cards for a round.",N,N],[12,"food_card","","",15,N],[12,"population_growths","","",15,N],[12,"body_growths","","",15,N],[12,"boards","","",15,N],[12,"traits","","",15,N],[3,"Growth","","A choice to grow a species in either body size or…",N,N],[12,"species_index","","",16,N],[12,"card_index","","",16,N],[3,"BoardTrade","","A choice to trade a card for a species board, and…",N,N],[12,"card_index","","",17,N],[12,"trait_card_indeces","","",17,N],[3,"TraitTrade","","A choice to swap out a trait on a species for a new one.",N,N],[12,"species_index","","",18,N],[12,"trait_index","","",18,N],[12,"replacement_index","","",18,N],[4,"FeedChoice","","A choice of a species to feed.",N,N],[13,"Abstain","","This represents a player's choice to not attack or store.",19,N],[13,"Feed","","Contains the index of the `Species` the player would like…",19,N],[13,"Store","","Contains the index of the `Species` the player would like…",19,N],[13,"Attack","","Contains in order, the current player's attacking species…",19,N],[11,"validate","evolution::interact","",15,[[["self"],["actionobservation"]],["result"]]],[11,"internalize","","",19,[[["self"],["game"]]]],[8,"Choice","evolution::interact::choose","A single choice for an interaction.",N,N],[8,"Choose","","Asking for a `Choice`.",N,N],[10,"choose","","",21,[[["self"],["o"]],["result",["option"]]]],[0,"choices","evolution::interact","Public to get around…",N,N],[11,"len","","",13,[[["self"]],["usize"]]],[11,"current_player_index","","",13,[[["self"]],["usize"]]],[8,"Choices","evolution::interact::choices","The knowledge of all possible `Choice`s for the current…",N,N],[10,"choices","","",22,[[["self"]],["vec"]]],[8,"Chooser","evolution::interact","",N,N],[10,"start","","",23,[[["self"],["dealobservation"]]]],[10,"info","","",23,[[["self"]],["option",["str"]]]],[0,"silly","evolution","A very silly chooser.",N,N],[3,"Silly","evolution::silly","",N,N],[3,"RankedFeedChoice","","A ranked feed choice, where lower ranked choices are best.",N,N],[12,"0","","",24,N],[12,"1","","",24,N],[3,"RankedSpecies","","A ranked species, where lower ranked species are best.",N,N],[0,"game","evolution","Types and functions required for playing a game of…",N,N],[3,"Game","evolution::game","A game of evolution that contains all the players, the…",N,N],[3,"Auto","","Makes choices automatically when possible.",N,N],[12,"0","","",25,N],[0,"context","","Objects with knowledge of the game.",N,N],[3,"Board","evolution::game::context","A game aware board.",N,N],[3,"Player","","A game aware player.",N,N],[3,"Situation","","An attack within a game.",N,N],[3,"Species","","A game aware species.",N,N],[11,"new","","Create a new contextual board instance from a mutable…",26,[[["game"]],["self"]]],[11,"reveal","","Reveal the cards played to the board as food. Doing so…",26,[[["self"]]]],[11,"new","","",27,[[["game"],["usize"]],["self"]]],[11,"refund","","Give this player `CARDS_PER_EXTINCTION` cards.",27,[[["self"]]]],[11,"get_cards","","",27,N],[11,"scavenge","","Trigger scavenging for all applicable species in this…",27,[[["self"]]]],[11,"new","","Create a new instance.",28,N],[11,"us","","The attacking player.",28,[[["self"]],["player"]]],[11,"attacker","","The attacking species.",28,[[["self"]],["species"]]],[11,"them","","The defending player.",28,[[["self"]],["player"]]],[11,"defender","","The defending species.",28,[[["self"]],["species"]]],[11,"fight","","Apply the effects of an attack of the attacker to the…",28,[[["self"]],["result"]]],[11,"new","","",29,N],[11,"player","","This species' player.",29,[[["self"]],["player"]]],[11,"neighbor","","This species' neighbor on the given placement.",29,[[["self"],["placement"]],["option",["species"]]]],[11,"feed","","Feed this species.",29,[[["self"]]]],[11,"eat","","Tell this species to eat, returning false if they can't.",29,[[["self"]],["bool"]]],[11,"cooperate","","Trigger cooperation for this species if applicable.",29,[[["self"]]]],[11,"store","","Store the given amount of food into this species' fat.",29,[[["self"],["u64"]]]],[11,"kill","","Kill a member of this species.",29,[[["self"]],["result",["bool"]]]],[8,"Context","","Objects with mutable knowledge of the context they live in.",N,N],[10,"context","","Return the context of this object.",30,[[["self"]],["t"]]],[10,"context_mut","","Return the mutable context of this object.",30,[[["self"]],["t"]]],[0,"step","evolution::game","Steps of playing the game.",N,N],[3,"Deal","evolution::game::step","",N,N],[12,"0","","",31,N],[3,"Action","","Players must give a card as food, and can choose to give…",N,N],[12,"0","","",32,N],[12,"1","","",32,N],[3,"Reveal","","",N,N],[12,"0","","",33,N],[3,"Feed","","A single step of feeding in the game. This step is in…",N,N],[12,"0","","",34,N],[12,"1","","",34,N],[3,"Bag","","cull all of the species in the game, giving 2 cards to…",N,N],[12,"0","","",35,N],[11,"deal_species","","",31,[[["self"]],["result"]]],[11,"deal_cards","","",31,[[["self"]],["result"]]],[8,"Step","","Represents some mutable effect on a `Game`.",N,N],[10,"step","","Take one step, mutating the game for future steps.",36,[[["self"]],["result"]]],[6,"Id","evolution::game","A unique identifier of a player in the game.",N,N],[17,"MIN_PLAYERS","","The minimum number of players allowed to play evolution at…",N,N],[17,"MAX_PLAYERS","","The maximum number of players allowed to play evolution at…",N,N],[11,"new","","Creates a new instance of a `Game` object. Also allocates…",37,[[["vec",["channel"]]],["result"]]],[11,"new","","Creates a new game with the specified number of `Player`s,…",37,[[["usize"]],["result"]]],[11,"print_scores","","Writes the scores of all players in the game to standard…",37,[[["self"]]]],[11,"board","","Returns a reference to the game board.",37,[[["self"]],["board"]]],[11,"board_mut","","Returns a mutable reference to the game board.",37,[[["self"]],["board"]]],[11,"players","","Returns the players of this game in the order they are…",37,N],[11,"players_mut","","Returns mutable references to the players of this game in…",37,N],[11,"current_player","","Returns the index of the player in this game representing…",37,[[["self"]],["player"]]],[11,"current_player_idx","","",37,[[["self"]],["usize"]]],[11,"advance_starting_player","","Shifts the current starting player to the last position,…",37,[[["self"]]]],[11,"advance_current_player","","Advances the current player by one, wrapping to the start…",37,[[["self"]]]],[11,"skip_advance_current_player","","Marks the current player as skipped and advances the…",37,[[["self"]]]],[11,"eject_current_player","","Ejects the current player from the game.",37,[[["self"]]]],[11,"turn_is_over","","Returns `true` if not players are in the skip set.",37,[[["self"]],["bool"]]],[11,"is_over","","Returns `true` if there are no longer enough cards…",37,[[["self"]],["bool"]]],[11,"deck","","Returns a reference to the deck of this game.",37,N],[11,"deck_mut","","Returns a mutable reference to the deck of this game.",37,N],[11,"deal","","Attempts to remove a single card from the top of the deck,…",37,[[["self"]],["option",["card"]]]],[11,"deals","","Deals a given number of cards into a `Vec`. Each card is…",37,[[["self"],["usize"]],["vec",["card"]]]],[11,"play","","Plays through an entire game of Evolution until one of the…",37,[[["self"]]]],[11,"step_deal","","Executes the dealing step, providing all players with…",37,[[["self"]],["result"]]],[11,"step_action","","Executes the action step, requesting an exchange of cards…",37,[[["self"]],["result"]]],[11,"step_reveal","","Executes the reveal step, turning over all cards given to…",37,[[["self"]],["result"]]],[11,"step_feed","","Executes the feeding step, requesting and applying valid…",37,[[["self"]],["result"]]],[11,"step_bag","","Moves the food tokens on each species' boards to their…",37,[[["self"]],["result"]]],[14,"debug_expr","evolution","A helper that compiles into an evaluation of an…",N,N],[14,"test_harness","","A helper that compiles into a test harness for portions of…",N,N],[11,"from","evolution::ext","",38,[[["t"]],["t"]]],[11,"into_iter","","",38,[[["self"]],["i"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into_iter","","",39,[[["self"]],["i"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","evolution::object","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","evolution::interact","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"choose","","",15,[[["self"],["o"]],["result",["option"]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"choose","","",19,[[["self"],["o"]],["result",["option"]]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","evolution::silly","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","evolution::game","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","evolution::game::context","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","evolution::game::step","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"start","evolution::silly","",41,[[["self"],["dealobservation"]]]],[11,"info","","",41,[[["self"]],["option",["str"]]]],[11,"observe","evolution::object","",8,[[["self"]],["playerobservation"]]],[11,"observe","","",6,[[["self"]],["boardobservation"]]],[11,"observe","evolution::game","",37,[[["self"]],["actionobservation"]]],[11,"observe","","",37,[[["self"]],["feedobservation"]]],[11,"choose","evolution::silly","",41,[[["self"],["actionobservation"]],["result",["option"]]]],[11,"choose","","",41,[[["self"],["feedobservation"]],["result",["option"]]]],[11,"choose","evolution::game","",25,[[["self"],["actionobservation"]],["result",["option"]]]],[11,"choose","","",25,[[["self"],["feedobservation"]],["result",["option"]]]],[11,"choices","evolution::interact","",12,[[["self"]],["vec",["actionchoice"]]]],[11,"choices","","",13,[[["self"]],["vec",["feedchoice"]]]],[11,"context","evolution::game::context","",26,[[["self"]],["game"]]],[11,"context_mut","","",26,[[["self"]],["game"]]],[11,"context","","",27,[[["self"]],["game"]]],[11,"context_mut","","",27,[[["self"]],["game"]]],[11,"context","","",28,[[["self"]],["game"]]],[11,"context_mut","","",28,[[["self"]],["game"]]],[11,"context","","",29,[[["self"]],["game"]]],[11,"context_mut","","",29,[[["self"]],["game"]]],[11,"step","evolution::game::step","",31,[[["self"]],["result"]]],[11,"step","","",32,[[["self"]],["result"]]],[11,"step","","",33,[[["self"]],["result"]]],[11,"step","","",34,[[["self"]],["result"]]],[11,"step","","",35,[[["self"]],["result"]]],[11,"from","evolution::object","",7,[[["vec",["species"]]],["domain"]]],[11,"from","evolution::interact","",19,[[["rankedfeedchoice"]],["self"]]],[11,"from","evolution::silly","",42,[[["species"]],["self"]]],[11,"partial_cmp","evolution::object","",3,[[["self"],["card"]],["option",["ordering"]]]],[11,"partial_cmp","","",5,[[["self"],["trait"]],["option",["ordering"]]]],[11,"partial_cmp","evolution::silly","",24,[[["self"],["rankedfeedchoice"]],["option",["ordering"]]]],[11,"partial_cmp","","",42,[[["self"],["rankedspecies"]],["option",["ordering"]]]],[11,"next","evolution::ext","",38,[[["self"]],["option"]]],[11,"next","","",39,[[["self"]],["option"]]],[11,"default","evolution::object","",6,[[],["board"]]],[11,"default","","",7,[[],["domain"]]],[11,"default","","",9,[[],["self"]]],[11,"default","evolution::interact","",10,[[],["playerobservation"]]],[11,"default","","",11,[[],["boardobservation"]]],[11,"eq","evolution::object","",40,[[["self"],["foodtoken"]],["bool"]]],[11,"eq","","",3,[[["self"],["card"]],["bool"]]],[11,"ne","","",3,[[["self"],["card"]],["bool"]]],[11,"eq","","",7,[[["self"],["domain"]],["bool"]]],[11,"ne","","",7,[[["self"],["domain"]],["bool"]]],[11,"eq","","",9,[[["self"],["species"]],["bool"]]],[11,"ne","","",9,[[["self"],["species"]],["bool"]]],[11,"eq","","",5,[[["self"],["trait"]],["bool"]]],[11,"eq","evolution::interact","",10,[[["self"],["playerobservation"]],["bool"]]],[11,"ne","","",10,[[["self"],["playerobservation"]],["bool"]]],[11,"eq","","",15,[[["self"],["actionchoice"]],["bool"]]],[11,"ne","","",15,[[["self"],["actionchoice"]],["bool"]]],[11,"eq","","",16,[[["self"],["growth"]],["bool"]]],[11,"ne","","",16,[[["self"],["growth"]],["bool"]]],[11,"eq","","",17,[[["self"],["boardtrade"]],["bool"]]],[11,"ne","","",17,[[["self"],["boardtrade"]],["bool"]]],[11,"eq","","",18,[[["self"],["traittrade"]],["bool"]]],[11,"ne","","",18,[[["self"],["traittrade"]],["bool"]]],[11,"eq","","",19,[[["self"],["feedchoice"]],["bool"]]],[11,"ne","","",19,[[["self"],["feedchoice"]],["bool"]]],[11,"eq","evolution::silly","",24,[[["self"],["rankedfeedchoice"]],["bool"]]],[11,"eq","","",42,[[["self"],["rankedspecies"]],["bool"]]],[11,"clone","evolution::object","",40,[[["self"]],["foodtoken"]]],[11,"clone","","",4,[[["self"]],["placement"]]],[11,"clone","","",6,[[["self"]],["board"]]],[11,"clone","","",3,[[["self"]],["card"]]],[11,"clone","","",7,[[["self"]],["domain"]]],[11,"clone","","",8,[[["self"]],["player"]]],[11,"clone","","",9,[[["self"]],["species"]]],[11,"clone","","",5,[[["self"]],["trait"]]],[11,"clone","evolution::interact","",10,[[["self"]],["playerobservation"]]],[11,"clone","","",11,[[["self"]],["boardobservation"]]],[11,"clone","","",12,[[["self"]],["actionobservation"]]],[11,"clone","","",13,[[["self"]],["feedobservation"]]],[11,"clone","","",15,[[["self"]],["actionchoice"]]],[11,"clone","","",16,[[["self"]],["growth"]]],[11,"clone","","",17,[[["self"]],["boardtrade"]]],[11,"clone","","",18,[[["self"]],["traittrade"]]],[11,"clone","","",19,[[["self"]],["feedchoice"]]],[11,"cmp","evolution::object","",3,[[["self"],["card"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["trait"]],["ordering"]]],[11,"cmp","evolution::silly","",24,[[["self"],["rankedfeedchoice"]],["ordering"]]],[11,"cmp","","",42,[[["self"],["rankedspecies"]],["ordering"]]],[11,"fmt","evolution::object","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","evolution::interact","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","evolution::silly","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","evolution::game","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","evolution::game::context","",29,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","evolution::silly","",24,N],[11,"deref_mut","evolution::game::context","",26,N],[11,"deref_mut","","",27,N],[11,"deref_mut","","",29,N],[11,"deref_mut","evolution::game::step","",31,[[["self"]],["game"]]],[11,"deref_mut","","",32,[[["self"]],["game"]]],[11,"deref_mut","","",33,[[["self"]],["game"]]],[11,"deref_mut","","",34,[[["self"]],["game"]]],[11,"deref_mut","","",35,[[["self"]],["game"]]],[11,"hash","evolution::object","",5,N],[11,"deref","","",7,N],[11,"deref","evolution::silly","",24,N],[11,"deref","","",42,N],[11,"deref","evolution::game::context","",26,N],[11,"deref","","",27,N],[11,"deref","","",29,N],[11,"deref","evolution::game::step","",31,[[["self"]],["game"]]],[11,"deref","","",32,[[["self"]],["game"]]],[11,"deref","","",33,[[["self"]],["game"]]],[11,"deref","","",34,[[["self"]],["game"]]],[11,"deref","","",35,[[["self"]],["game"]]],[11,"index","evolution::object","",7,N],[11,"index_mut","","",7,N],[11,"from_wire","","",6,[[["natural"]],["result"]]],[11,"from_wire","","",3,[[["speciescard"]],["result",["card"]]]],[11,"from_wire","","",7,[[["los"]],["result"]]],[11,"from_wire","","",8,[[["start"]],["result",["player"]]]],[11,"from_wire","","",8,[[["player"]],["result",["player"]]]],[11,"from_wire","","",9,[[["species"]],["result"]]],[11,"from_wire","","",5,[[["trait"]],["result"]]],[11,"from_wire","evolution::interact","",10,[[["player"]],["result"]]],[11,"from_wire","","",11,[[["natural"]],["result"]]],[11,"from_wire","","",11,[[["naturalplus"]],["result"]]],[11,"from_wire","","",14,[[["start"]],["result"]]],[11,"from_wire","","",12,N],[11,"from_wire","","",12,[[["choice"]],["result"]]],[11,"from_wire","","",13,[[["state"]],["result"]]],[11,"from_wire","","",13,[[["feeding"]],["result"]]],[11,"from_wire","","",15,[[["action4"]],["result"]]],[11,"from_wire","","",16,[[["gp"]],["result"]]],[11,"from_wire","","",16,[[["gb"]],["result"]]],[11,"from_wire","","",15,[[["action4"]],["result"]]],[11,"from_wire","","",16,[[["gp"]],["result"]]],[11,"from_wire","","",16,[[["gb"]],["result"]]],[11,"from_wire","","",17,[[["bt"]],["result"]]],[11,"from_wire","","",18,[[["rt"]],["result"]]],[11,"from_wire","","",19,[[["feedchoice"]],["result"]]],[11,"from_wire","evolution::game","",37,[[["configuration"]],["result"]]],[11,"to_wire","evolution::object","",6,[[["self"]],["natural"]]],[11,"to_wire","","",3,[[["self"]],["speciescard"]]],[11,"to_wire","","",7,[[["self"]],["los"]]],[11,"to_wire","","",8,[[["self"]],["player"]]],[11,"to_wire","","",9,[[["self"]],["species"]]],[11,"to_wire","","",5,[[["self"]],["trait"]]],[11,"to_wire","evolution::interact","",10,[[["self"]],["player"]]],[11,"to_wire","","",10,[[["self"]],["boards"]]],[11,"to_wire","","",11,[[["self"]],["natural"]]],[11,"to_wire","","",11,[[["self"]],["naturalplus"]]],[11,"to_wire","","",14,[[["self"]],["start"]]],[11,"to_wire","","",12,N],[11,"to_wire","","",12,[[["self"]],["choice"]]],[11,"to_wire","","",13,[[["self"]],["state"]]],[11,"to_wire","","",13,[[["self"]],["feeding"]]],[11,"to_wire","","",15,[[["self"]],["action4"]]],[11,"to_wire","","",16,[[["self"]],["gp"]]],[11,"to_wire","","",16,[[["self"]],["gb"]]],[11,"to_wire","","",15,[[["self"]],["action4"]]],[11,"to_wire","","",16,[[["self"]],["gp"]]],[11,"to_wire","","",16,[[["self"]],["gb"]]],[11,"to_wire","","",17,[[["self"]],["bt"]]],[11,"to_wire","","",18,[[["self"]],["rt"]]],[11,"to_wire","","",19,[[["self"]],["feedchoice"]]],[11,"to_wire","evolution::game","",37,[[["self"]],["configuration"]]]],"paths":[[8,"AroundFrom"],[8,"AroundFromMut"],[8,"Dequeue"],[3,"Card"],[4,"Placement"],[4,"Trait"],[3,"Board"],[3,"Domain"],[3,"Player"],[3,"Species"],[3,"PlayerObservation"],[3,"BoardObservation"],[3,"ActionObservation"],[3,"FeedObservation"],[3,"DealObservation"],[3,"ActionChoice"],[3,"Growth"],[3,"BoardTrade"],[3,"TraitTrade"],[4,"FeedChoice"],[8,"Observe"],[8,"Choose"],[8,"Choices"],[8,"Chooser"],[3,"RankedFeedChoice"],[3,"Auto"],[3,"Board"],[3,"Player"],[3,"Situation"],[3,"Species"],[8,"Context"],[3,"Deal"],[3,"Action"],[3,"Reveal"],[3,"Feed"],[3,"Bag"],[8,"Step"],[3,"Game"],[3,"AroundFromIter"],[3,"AroundFromMutIter"],[3,"FoodToken"],[3,"Silly"],[3,"RankedSpecies"]]};
searchIndex["evolution_logger"]={"doc":"","items":[[3,"Logger","evolution_logger","A logger for our game.",N,N],[11,"init","","Spin up a new `Logger` which will log messages to STDOUT.",0,[[],["result",["setloggererror"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"enabled","","",0,[[["self"],["logmetadata"]],["bool"]]],[11,"log","","",0,[[["self"],["logrecord"]]]]],"paths":[[3,"Logger"]]};
searchIndex["evolution_wire"]={"doc":"Wire data types for the evolution game.","items":[[3,"Action4","evolution_wire","The choice of a player's card choices for the round.",N,N],[12,"0","","",0,N],[12,"1","","",0,N],[12,"2","","",0,N],[12,"3","","",0,N],[12,"4","","",0,N],[3,"BT","","A trading of a card for a new board.",N,N],[12,"0","","",1,N],[3,"Choice","","The data a player gets to make a choice for the action step.",N,N],[12,"current_player","","The current player of an action step.",2,N],[12,"before","","The species of the players before the `current_player` in…",2,N],[12,"after","","The species of the players after the `current_player` in…",2,N],[3,"Configuration","","A game state configuration.",N,N],[12,"players","","",3,N],[12,"watering_hole","","",3,N],[12,"deck","","",3,N],[3,"Feeding","","The information passed to a player for making a feed choice.",N,N],[12,"current_player","","The player who's turn it is to feed.",4,N],[12,"watering_hole","","Tokens of food that are left at the watering hole.",4,N],[12,"opponents","","The other players of the game, not including the feeding…",4,N],[3,"FoodValue","","An integer in the range [-8, 8].",N,N],[3,"GB","","A request to trade a card for a body size increase.",N,N],[12,"board_index","","",5,N],[12,"card_index","","",5,N],[3,"GP","","A request to trade a card for a population increase.",N,N],[12,"board_index","","",6,N],[12,"card_index","","",6,N],[3,"Integer","","An integer.",N,N],[12,"0","","",7,N],[3,"NatPlus","","A natural number in the range [1, 7].",N,N],[3,"Nat","","A natural number in the range [0, 7].",N,N],[3,"NaturalPlus","","Any integer > 0.",N,N],[3,"Natural","","Any integer >= 0.",N,N],[12,"0","","",8,N],[3,"Player","","A player possibly with owned data.",N,N],[12,"id","","",9,N],[12,"species","","",9,N],[12,"bag","","",9,N],[12,"cards","","",9,N],[3,"RT","","The replacement of a sigle trait on a species.",N,N],[12,"0","","",10,N],[12,"1","","",10,N],[12,"2","","",10,N],[3,"Situation","","An attacking situation between 2 to 4 species.",N,N],[12,"attacker","","",11,N],[12,"defender","","",11,N],[12,"left","","",11,N],[12,"right","","",11,N],[3,"SpeciesCard","","A species card, with a food value, and a trait.",N,N],[12,"0","","",12,N],[12,"1","","",12,N],[3,"Species","","A species with or without fat food.",N,N],[12,"food","","",13,N],[12,"body","","",13,N],[12,"population","","",13,N],[12,"traits","","",13,N],[12,"fat_food","","",13,N],[3,"StartRound","","The input to the `xstep4` test harness.",N,N],[12,"configuration","","",14,N],[12,"step_actions","","",14,N],[3,"LOT","","A list traits, which must be at most 3 in length.",N,N],[4,"Either","","A wire type for containing one of two variants, without…",N,N],[13,"Left","","",15,N],[13,"Right","","",15,N],[4,"FeedChoice","","A wire feed choice response message.",N,N],[13,"Abstain","","",16,N],[13,"Feed","","",16,N],[13,"Store","","",16,N],[13,"Attack","","",16,N],[4,"Trait","","A trait.",N,N],[13,"Carnivore","","",17,N],[13,"Ambush","","",17,N],[13,"Burrowing","","",17,N],[13,"Climbing","","",17,N],[13,"Cooperation","","",17,N],[13,"FatTissue","","",17,N],[13,"Fertile","","",17,N],[13,"Foraging","","",17,N],[13,"HardShell","","",17,N],[13,"Herding","","",17,N],[13,"Horns","","",17,N],[13,"LongNeck","","",17,N],[13,"PackHunting","","",17,N],[13,"Scavenger","","",17,N],[13,"Symbiosis","","",17,N],[13,"WarningCall","","",17,N],[0,"channel","","TODO: ",N,N],[3,"Channel","evolution_wire::channel","Sending and receiving whole wire messages.",N,N],[11,"connect_to_socket_addr","","Create a stream, and connect to it.",18,[[["string"],["a"]],["result",["channel","error"]]]],[11,"connect_to_tcp_stream","","Connect to a tcp stream, we'll send the \"info\" for this…",18,[[["string"],["tcpstream"]],["result",["channel","error"]]]],[11,"accept_from_socket_addr","","",18,[[["a"]],["result",["channel","error"]]]],[11,"accept_from_tcp_stream","","Accept from a tcp stream, we must get some \"info\" and…",18,[[["tcpstream"]],["result",["channel","error"]]]],[11,"info","","",18,[[["self"]],["str"]]],[11,"call","","",18,[[["self"],["d"]],["result",["error"]]]],[11,"accept_call","","",18,[[["self"],["fn"]],["result",["error"]]]],[11,"send","","",18,[[["self"],["t"]],["result",["error"]]]],[11,"recv","","",18,[[["self"]],["result",["error"]]]],[11,"recv_either","","Receive an `Either<T, U>` type from the wire. This…",18,[[["self"]],["result",["either","error"]]]],[0,"remote","evolution_wire","Remote protocol wire datatypes.",N,N],[3,"Action4","evolution_wire::remote","",N,N],[12,"0","","",19,N],[12,"1","","",19,N],[12,"2","","",19,N],[12,"3","","",19,N],[12,"4","","",19,N],[3,"Choose","","A data type representing a request for a player choice…",N,N],[12,"before","","",20,N],[12,"after","","",20,N],[3,"GP","","",N,N],[12,"board_index","","",21,N],[12,"card_index","","",21,N],[3,"GB","","",N,N],[12,"board_index","","",22,N],[12,"card_index","","",22,N],[3,"Start","","A wire data type used to signify the start of a new round.",N,N],[12,"watering_hole","","",23,N],[12,"bag","","",23,N],[12,"domain","","",23,N],[12,"hand","","",23,N],[3,"State","","A wire data type representing a given player's internal…",N,N],[12,"bag","","",24,N],[12,"domain","","",24,N],[12,"hand","","",24,N],[12,"watering_hole","","",24,N],[12,"opponents","","",24,N],[6,"LOB","","The player’s complete current state and the public state…",N,N],[6,"Boards","","",N,N],[6,"Species","","",N,N],[6,"LOT","","",N,N],[6,"Cards","","",N,N],[6,"FeedingChoice","","",N,N],[11,"new","evolution_wire","",1,[[["vec",["natural"]]],["result",["bt"]]]],[11,"from_value","","Attempts to produce an `Either<T, U>` from a…",15,[[["value"]],["result",["either"]]]],[11,"is_left","","",15,[[["self"]],["bool"]]],[11,"is_right","","",15,[[["self"]],["bool"]]],[11,"new","","",25,[[["i64"]],["result",["foodvalue"]]]],[11,"new","","",26,[[["u64"]],["result",["natplus"]]]],[11,"new","","",27,[[["u64"]],["result",["nat"]]]],[11,"new","","",28,[[["u64"]],["result",["naturalplus"]]]],[11,"new","","",29,[[["vec",["trait"]]],["result",["lot"]]]],[6,"Step4","","Represents all the choices of cards for a game's players.",N,N],[6,"LOP","","A list of wire player pluses.",N,N],[6,"LOC","","A list of species cards.",N,N],[6,"LOS","","A list of species.",N,N],[8,"FromWire","","A trait for getting meaningful data from wire data.",N,N],[10,"from_wire","","",30,[[["w"]],["result"]]],[8,"ToWire","","A trait for getting wire data from meaningful data.",N,N],[10,"to_wire","","",31,[[["self"]],["w"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","evolution_wire::channel","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","evolution_wire::remote","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"drop","evolution_wire::channel","",18,[[["self"]]]],[11,"partial_cmp","evolution_wire","",25,[[["self"],["foodvalue"]],["option",["ordering"]]]],[11,"lt","","",25,[[["self"],["foodvalue"]],["bool"]]],[11,"le","","",25,[[["self"],["foodvalue"]],["bool"]]],[11,"gt","","",25,[[["self"],["foodvalue"]],["bool"]]],[11,"ge","","",25,[[["self"],["foodvalue"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["integer"]],["option",["ordering"]]]],[11,"lt","","",7,[[["self"],["integer"]],["bool"]]],[11,"le","","",7,[[["self"],["integer"]],["bool"]]],[11,"gt","","",7,[[["self"],["integer"]],["bool"]]],[11,"ge","","",7,[[["self"],["integer"]],["bool"]]],[11,"partial_cmp","","",26,[[["self"],["natplus"]],["option",["ordering"]]]],[11,"lt","","",26,[[["self"],["natplus"]],["bool"]]],[11,"le","","",26,[[["self"],["natplus"]],["bool"]]],[11,"gt","","",26,[[["self"],["natplus"]],["bool"]]],[11,"ge","","",26,[[["self"],["natplus"]],["bool"]]],[11,"partial_cmp","","",27,[[["self"],["nat"]],["option",["ordering"]]]],[11,"lt","","",27,[[["self"],["nat"]],["bool"]]],[11,"le","","",27,[[["self"],["nat"]],["bool"]]],[11,"gt","","",27,[[["self"],["nat"]],["bool"]]],[11,"ge","","",27,[[["self"],["nat"]],["bool"]]],[11,"partial_cmp","","",28,[[["self"],["naturalplus"]],["option",["ordering"]]]],[11,"lt","","",28,[[["self"],["naturalplus"]],["bool"]]],[11,"le","","",28,[[["self"],["naturalplus"]],["bool"]]],[11,"gt","","",28,[[["self"],["naturalplus"]],["bool"]]],[11,"ge","","",28,[[["self"],["naturalplus"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["natural"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["natural"]],["bool"]]],[11,"le","","",8,[[["self"],["natural"]],["bool"]]],[11,"gt","","",8,[[["self"],["natural"]],["bool"]]],[11,"ge","","",8,[[["self"],["natural"]],["bool"]]],[11,"eq","","",15,[[["self"],["either"]],["bool"]]],[11,"ne","","",15,[[["self"],["either"]],["bool"]]],[11,"eq","","",16,[[["self"],["feedchoice"]],["bool"]]],[11,"ne","","",16,[[["self"],["feedchoice"]],["bool"]]],[11,"eq","","",25,[[["self"],["foodvalue"]],["bool"]]],[11,"ne","","",25,[[["self"],["foodvalue"]],["bool"]]],[11,"eq","","",7,[[["self"],["integer"]],["bool"]]],[11,"ne","","",7,[[["self"],["integer"]],["bool"]]],[11,"eq","","",26,[[["self"],["natplus"]],["bool"]]],[11,"ne","","",26,[[["self"],["natplus"]],["bool"]]],[11,"eq","","",27,[[["self"],["nat"]],["bool"]]],[11,"ne","","",27,[[["self"],["nat"]],["bool"]]],[11,"eq","","",28,[[["self"],["naturalplus"]],["bool"]]],[11,"ne","","",28,[[["self"],["naturalplus"]],["bool"]]],[11,"eq","","",8,[[["self"],["natural"]],["bool"]]],[11,"ne","","",8,[[["self"],["natural"]],["bool"]]],[11,"eq","","",9,[[["self"],["player"]],["bool"]]],[11,"ne","","",9,[[["self"],["player"]],["bool"]]],[11,"eq","","",11,[[["self"],["situation"]],["bool"]]],[11,"ne","","",11,[[["self"],["situation"]],["bool"]]],[11,"eq","","",12,[[["self"],["speciescard"]],["bool"]]],[11,"ne","","",12,[[["self"],["speciescard"]],["bool"]]],[11,"eq","","",13,[[["self"],["species"]],["bool"]]],[11,"ne","","",13,[[["self"],["species"]],["bool"]]],[11,"eq","","",17,[[["self"],["trait"]],["bool"]]],[11,"eq","","",29,[[["self"],["lot"]],["bool"]]],[11,"ne","","",29,[[["self"],["lot"]],["bool"]]],[11,"clone","evolution_wire::remote","",23,[[["self"]],["start"]]],[11,"clone","evolution_wire","",25,[[["self"]],["foodvalue"]]],[11,"clone","","",7,[[["self"]],["integer"]]],[11,"clone","","",26,[[["self"]],["natplus"]]],[11,"clone","","",27,[[["self"]],["nat"]]],[11,"clone","","",28,[[["self"]],["naturalplus"]]],[11,"clone","","",8,[[["self"]],["natural"]]],[11,"clone","","",12,[[["self"]],["speciescard"]]],[11,"clone","","",13,[[["self"]],["species"]]],[11,"clone","","",17,[[["self"]],["trait"]]],[11,"clone","","",29,[[["self"]],["lot"]]],[11,"cmp","","",25,[[["self"],["foodvalue"]],["ordering"]]],[11,"cmp","","",7,[[["self"],["integer"]],["ordering"]]],[11,"cmp","","",26,[[["self"],["natplus"]],["ordering"]]],[11,"cmp","","",27,[[["self"],["nat"]],["ordering"]]],[11,"cmp","","",28,[[["self"],["naturalplus"]],["ordering"]]],[11,"cmp","","",8,[[["self"],["natural"]],["ordering"]]],[11,"fmt","evolution_wire::channel","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","evolution_wire::remote","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","evolution_wire","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"deref_mut","evolution_wire::channel","",18,N],[11,"deref","","",18,N],[11,"deref","evolution_wire","",1,N],[11,"deref","","",25,N],[11,"deref","","",7,N],[11,"deref","","",26,N],[11,"deref","","",27,N],[11,"deref","","",28,N],[11,"deref","","",8,N],[11,"deref","","",29,N],[11,"serialize","evolution_wire::remote","",19,[[["self"],["s"]],["result"]]],[11,"serialize","","",20,[[["self"],["s"]],["result"]]],[11,"serialize","","",21,[[["self"],["s"]],["result"]]],[11,"serialize","","",22,[[["self"],["s"]],["result"]]],[11,"serialize","","",23,[[["self"],["s"]],["result"]]],[11,"serialize","","",24,[[["self"],["s"]],["result"]]],[11,"serialize","evolution_wire","",0,[[["self"],["s"]],["result"]]],[11,"serialize","","",1,[[["self"],["s"]],["result"]]],[11,"serialize","","",2,[[["self"],["s"]],["result"]]],[11,"serialize","","",3,[[["self"],["s"]],["result"]]],[11,"serialize","","",16,[[["self"],["s"]],["result"]]],[11,"serialize","","",4,[[["self"],["s"]],["result"]]],[11,"serialize","","",25,[[["self"],["s"]],["result"]]],[11,"serialize","","",5,[[["self"],["s"]],["result"]]],[11,"serialize","","",6,[[["self"],["s"]],["result"]]],[11,"serialize","","",7,[[["self"],["s"]],["result"]]],[11,"serialize","","",26,[[["self"],["s"]],["result"]]],[11,"serialize","","",27,[[["self"],["s"]],["result"]]],[11,"serialize","","",28,[[["self"],["s"]],["result"]]],[11,"serialize","","",8,[[["self"],["s"]],["result"]]],[11,"serialize","","",9,[[["self"],["s"]],["result"]]],[11,"serialize","","",10,[[["self"],["s"]],["result"]]],[11,"serialize","","",12,[[["self"],["s"]],["result"]]],[11,"serialize","","",13,[[["self"],["s"]],["result"]]],[11,"serialize","","",14,[[["self"],["s"]],["result"]]],[11,"serialize","","",17,[[["self"],["s"]],["result"]]],[11,"serialize","","",29,[[["self"],["s"]],["result"]]],[11,"deserialize","evolution_wire::remote","",19,[[["d"]],["result"]]],[11,"deserialize","","",20,[[["d"]],["result"]]],[11,"deserialize","","",21,[[["d"]],["result"]]],[11,"deserialize","","",22,[[["d"]],["result"]]],[11,"deserialize","","",23,[[["d"]],["result"]]],[11,"deserialize","","",24,[[["d"]],["result"]]],[11,"deserialize","evolution_wire","",0,[[["d"]],["result"]]],[11,"deserialize","","",1,[[["d"]],["result"]]],[11,"deserialize","","",2,[[["d"]],["result"]]],[11,"deserialize","","",3,[[["d"]],["result"]]],[11,"deserialize","","",16,[[["d"]],["result"]]],[11,"deserialize","","",4,[[["d"]],["result"]]],[11,"deserialize","","",25,[[["d"]],["result"]]],[11,"deserialize","","",5,[[["d"]],["result"]]],[11,"deserialize","","",6,[[["d"]],["result"]]],[11,"deserialize","","",7,[[["d"]],["result"]]],[11,"deserialize","","",26,[[["d"]],["result"]]],[11,"deserialize","","",27,[[["d"]],["result"]]],[11,"deserialize","","",28,[[["d"]],["result"]]],[11,"deserialize","","",8,[[["d"]],["result"]]],[11,"deserialize","","",9,[[["d"]],["result"]]],[11,"deserialize","","",10,[[["d"]],["result"]]],[11,"deserialize","","",11,[[["d"]],["result"]]],[11,"deserialize","","",12,[[["d"]],["result"]]],[11,"deserialize","","",13,[[["d"]],["result"]]],[11,"deserialize","","",14,[[["d"]],["result"]]],[11,"deserialize","","",17,[[["d"]],["result"]]],[11,"deserialize","","",29,[[["d"]],["result"]]]],"paths":[[3,"Action4"],[3,"BT"],[3,"Choice"],[3,"Configuration"],[3,"Feeding"],[3,"GB"],[3,"GP"],[3,"Integer"],[3,"Natural"],[3,"Player"],[3,"RT"],[3,"Situation"],[3,"SpeciesCard"],[3,"Species"],[3,"StartRound"],[4,"Either"],[4,"FeedChoice"],[4,"Trait"],[3,"Channel"],[3,"Action4"],[3,"Choose"],[3,"GP"],[3,"GB"],[3,"Start"],[3,"State"],[3,"FoodValue"],[3,"NatPlus"],[3,"Nat"],[3,"NaturalPlus"],[3,"LOT"],[8,"FromWire"],[8,"ToWire"]]};
searchIndex["itertools"]={"doc":"Itertools — extra iterator adaptors, functions and macros.","items":[[3,"Dedup","itertools","An iterator adaptor that removes repeated duplicates.",N,N],[3,"Interleave","","An iterator adaptor that alternates elements from two…",N,N],[3,"InterleaveShortest","","An iterator adaptor that alternates elements from the two…",N,N],[3,"Product","","An iterator adaptor that iterates over the cartesian…",N,N],[3,"PutBack","","An iterator adaptor that allows putting back a single item…",N,N],[3,"PutBackN","","An iterator adaptor that allows putting multiple items in…",N,N],[3,"Batching","","A “meta iterator adaptor”. Its closure recives a reference…",N,N],[3,"GroupBy","","An iterator adaptor that groups iterator elements.…",N,N],[3,"Step","","An iterator adaptor that steps a number elements in the…",N,N],[3,"Merge","","An iterator adaptor that merges the two base iterators in…",N,N],[3,"MergeBy","","An iterator adaptor that merges the two base iterators in…",N,N],[3,"MultiPeek","","An iterator adaptor that allows the user to peek at…",N,N],[3,"TakeWhileRef","","An iterator adaptor that borrows from a `Clone`-able…",N,N],[3,"WhileSome","","An iterator adaptor that filters `Option<A>` iterator…",N,N],[3,"Coalesce","","An iterator adaptor that may join together adjacent…",N,N],[3,"MendSlices","","An iterator adaptor that glues together adjacent…",N,N],[3,"Combinations","","An iterator to iterate through all the combinations of…",N,N],[3,"CombinationsN","","An iterator to iterate through all the `n`-length…",N,N],[3,"Unique","","An iterator adapter to filter out duplicate elements.",N,N],[3,"UniqueBy","","An iterator adapter to filter out duplicate elements.",N,N],[3,"Flatten","","An iterator adapter to simply flatten a structure.",N,N],[3,"Format","","Format all iterator elements lazily, separated by `sep`.",N,N],[3,"FormatDefault","","Format all iterator elements lazily, separated by `sep`.",N,N],[3,"ChunksLazy","","`ChunkLazy` is the storage for a lazy chunking operation.",N,N],[3,"Chunk","","An iterator for the elements in a single chunk.",N,N],[3,"Chunks","","An iterator that yields the Chunk iterators.",N,N],[3,"GroupByLazy","","`GroupByLazy` is the storage for the lazy grouping…",N,N],[3,"Group","","An iterator for the elements in a single group.",N,N],[3,"Groups","","An iterator that yields the Group iterators.",N,N],[3,"Intersperse","","An iterator adaptor to insert a particular value between…",N,N],[3,"ISlice","","An iterator adaptor that yields a subset (a slice) of the…",N,N],[3,"KMerge","","An iterator adaptor that merges an abitrary number of base…",N,N],[3,"Linspace","","An iterator of a sequence of evenly spaced floats.",N,N],[3,"PadUsing","","An iterator adaptor that pads a sequence to a minimum…",N,N],[3,"RcIter","","A wrapper for `Rc<RefCell<I>>`, that implements the…",N,N],[12,"rciter","","The boxed iterator.",0,N],[3,"RepeatN","","An iterator that repeats an element exactly n times.",N,N],[3,"RepeatCall","","An iterator source that produces elements indefinitely by…",N,N],[3,"Unfold","","`Unfold` is a general iterator builder: it has a mutable…",N,N],[12,"state","","Internal state that will be passed to the closure on the…",1,N],[3,"Stride","","An iterator similar to the slice iterator, but with a…",N,N],[3,"StrideMut","","The mutable equivalent of Stride.",N,N],[3,"Tee","","One half of an iterator pair where both return the same…",N,N],[3,"ZipEq","","An iterator which iterates two other iterators…",N,N],[3,"ZipLongest","","An iterator which iterates two other iterators…",N,N],[3,"Zip","","An iterator that generalizes .zip() and allows running…",N,N],[3,"ZipSlices","","An iterator which iterates two slices simultaneously.",N,N],[4,"Diff","","A type returned by the `diff_with` function.",N,N],[13,"FirstMismatch","","The index of the first non-matching element along with…",2,N],[13,"Shorter","","The total number of elements that were in `J` along with…",2,N],[13,"Longer","","The total number of elements that were in `I` along with…",2,N],[4,"MinMaxResult","","`MinMaxResult` is an enum returned by `minmax`. See…",N,N],[13,"NoElements","","Empty iterator",3,N],[13,"OneElement","","Iterator with one element, so the minimum and maximum are…",3,N],[13,"MinMax","","More than one element in the iterator, the first element…",3,N],[4,"EitherOrBoth","","A value yielded by `ZipLongest`. Contains one or two…",N,N],[13,"Both","","Neither input iterator is exhausted yet, yielding two…",4,N],[13,"Left","","The parameter iterator of `.zip_longest()` is exhausted,…",4,N],[13,"Right","","The `self` iterator of `.zip_longest()` is exhausted, only…",4,N],[4,"Partition","","Classifies the result of the `.partition_map()` closure…",N,N],[13,"Left","","Classify into the left partition.",5,N],[13,"Right","","Classify into the right partition.",5,N],[4,"FoldWhile","","An enum used for controlling the execution of…",N,N],[13,"Continue","","Continue folding with this value",6,N],[13,"Done","","Fold is complete and will return this value",6,N],[5,"diff_with","","Compares every element yielded by both `i` and `j` with…",N,[[["i"],["j"],["f"]],["option",["diff"]]]],[5,"linspace","","Return an iterator of evenly spaced floats.",N,[[["f"],["f"],["usize"]],["linspace"]]],[5,"equal","","Return `true` if both iterators produce equal sequences…",N,[[["i"],["j"]],["bool"]]],[5,"assert_equal","","Assert that two iterators produce equal sequences, with…",N,[[["i"],["j"]]]],[5,"partition","","Partition a sequence using predicate `pred` so that…",N,[[["i"],["f"]],["usize"]]],[11,"new","","Creat a new `Interleave` iterator.",7,[[["i"],["j"]],["interleave"]]],[11,"new","","Create a new `InterleaveShortest` iterator.",8,[[["i"],["j"]],["interleaveshortest"]]],[11,"new","","Iterator element type is `A`",9,[[["i"]],["self"]]],[11,"with_value","","Create a `PutBack` along with the `value` to put back.",9,N],[11,"into_parts","","Split the `PutBack` into its parts.",9,N],[11,"put_back","","Put back a single value to the front of the iterator.",9,N],[11,"new","","Iterator element type is `A`",10,[[["i"]],["self"]]],[11,"put_back","","Puts x in front of the iterator. The values are yielded in…",10,N],[11,"new","","Create a new cartesian product iterator",11,[[["i"],["j"]],["self"]]],[11,"new","","Create a new Batching iterator.",12,[[["i"],["f"]],["batching"]]],[11,"new","","Create a new `GroupBy` iterator.",13,[[["i"],["f"]],["self"]]],[11,"new","","Create a `Step` iterator.",14,[[["i"],["usize"]],["self"]]],[11,"new","","Create a `MultiPeek` iterator.",15,[[["i"]],["multipeek"]]],[11,"peek","","Works exactly like .next() with the only difference that…",15,[[["self"]],["option"]]],[11,"new","","Create a new `Coalesce`.",16,[[["i"],["f"]],["self"]]],[11,"new","","Create a new `Dedup`.",17,[[["i"]],["self"]]],[11,"new","","Create a new `MendSlices`.",18,[[["i"]],["self"]]],[11,"new","","Create a new `TakeWhileRef` from a reference to clonable…",19,[[["i"],["f"]],["self"]]],[11,"new","","Create a new `WhileSome<I>`.",20,[[["i"]],["self"]]],[11,"new","","Create a new `Combinations` from a clonable iterator.",21,[[["i"]],["combinations"]]],[11,"new","","Create a new `CombinationsN` from a clonable iterator.",22,[[["i"],["usize"]],["combinationsn"]]],[11,"new","","Create a new `UniqueBy` iterator.",23,[[["i"],["f"]],["uniqueby"]]],[11,"new","","Create a new `Flatten` iterator.",24,[[["i"]],["flatten"]]],[0,"free","","Free functions that create iterator adaptors or call…",N,N],[5,"enumerate","itertools::free","Iterate `iterable` with a running index.",N,[[["i"]],["enumerate"]]],[5,"rev","","Iterate `iterable` in reverse.",N,[[["i"]],["rev"]]],[5,"zip","","Iterate `i` and `j` in lock step.",N,[[["i"],["j"]],["zip"]]],[5,"zip_eq","","Iterate `i` and `j` in lock step.",N,[[["i"],["j"]],["zipeq"]]],[5,"chain","","Create an iterator that first iterates `i` and then `j`.",N,[[["i"],["j"]],["chain"]]],[5,"fold","","Perform a fold operation over the iterable.",N,[[["i"],["b"],["f"]],["b"]]],[5,"all","","Test whether the predicate holds for all elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"any","","Test whether the predicate holds for any elements in the…",N,[[["i"],["f"]],["bool"]]],[5,"max","","Return the maximum value of the iterable.",N,[[["i"]],["option"]]],[5,"min","","Return the minimum value of the iterable.",N,[[["i"]],["option"]]],[5,"interleave","","Create an iterator that interleaves elements in `i` and `j`.",N,[[["i"],["j"]],["interleave"]]],[5,"merge","","Create an iterator that merges elements in `i` and `j`.",N,[[["i"],["j"]],["merge"]]],[5,"kmerge","","Create an iterator that merges elements of the contained…",N,[[["i"]],["kmerge"]]],[5,"join","","Combine all iterator elements into one String, seperated…",N,[[["i"],["str"]],["string"]]],[5,"sorted","","Collect all the iterable's elements into a sorted vector…",N,[[["i"]],["vec"]]],[11,"new","itertools","Create a new Intersperse iterator",25,N],[11,"new","","Create a new ISlice.",26,[[["i"],["r"]],["self"]]],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The…",3,[[["self"]],["option"]]],[0,"misc","","A module of helper traits and iterators that are not…",N,N],[3,"FlatTuples","itertools::misc","A helper iterator that maps an iterator of tuples like…",N,N],[8,"IntoIteratorTuple","","Apply `IntoIterator` on each element of a tuple.",N,N],[16,"Output","","Tuple of values that implement `Iterator`.",27,N],[10,"into_iterator_tuple","","Return a tuple of iterators.",27,N],[8,"AppendTuple","","A helper trait for (x, y, z) ++ w => (x, y, z, w), used…",N,N],[16,"Result","","Resulting tuple type",28,N],[10,"append","","“Append” value `x` to a tuple.",28,N],[8,"GenericRange","","`GenericRange` is implemented by Rust's built-in range…",N,N],[8,"ToFloat","","Helper trait to convert usize to floating point type.",N,N],[8,"MendSlice","","A trait for items that can maybe be joined together.",N,N],[8,"Slice","","A helper trait to let `ZipSlices` accept both `&[T]` and…",N,N],[16,"Item","","The type of a reference to the slice's elements",29,N],[11,"new","itertools","Create a new PadUsing iterator.",30,[[["i"],["usize"],["f"]],["padusing"]]],[11,"new","","Create a new RcIter.",0,[[["i"]],["rciter"]]],[11,"new","","Create a new RepeatN with n repetitions.",31,[[["a"],["usize"]],["self"]]],[11,"new","","Create a new `RepeatCall` from a closure.",32,[[["f"]],["self"]]],[11,"new","","Creates a new iterator with the specified closure as the…",1,[[["st"],["f"]],["unfold"]]],[0,"size_hint","","Arithmetic on Iterator .size_hint() values.",N,N],[5,"add","itertools::size_hint","Add SizeHint correctly.",N,[[["sizehint"],["sizehint"]],["sizehint"]]],[5,"add_scalar","","Add x correctly to a SizeHint.",N,[[["sizehint"],["usize"]],["sizehint"]]],[5,"sub_scalar","","Sbb x correctly to a SizeHint.",N,[[["sizehint"],["usize"]],["sizehint"]]],[5,"mul_scalar","","Multiply x correctly with a SizeHint.",N,[[["sizehint"],["usize"]],["sizehint"]]],[5,"mul","","Multiply SizeHint correctly",N,[[["sizehint"],["sizehint"]],["sizehint"]]],[5,"max","","Return the maximum",N,[[["sizehint"],["sizehint"]],["sizehint"]]],[5,"min","","Return the minimum",N,[[["sizehint"],["sizehint"]],["sizehint"]]],[6,"SizeHint","","SizeHint is the return type of Iterator::size_hint().",N,N],[11,"from_ptr_len","itertools","Create a Stride iterator from a raw pointer.",33,N],[11,"from_ptr_len","","Create a StrideMut iterator from a raw pointer.",34,N],[11,"from_slice","","Create Stride iterator from a slice and the element step…",33,N],[11,"from_stride","","Create Stride iterator from an existing Stride iterator",33,[[["stride"],["isize"]],["stride"]]],[11,"swap_ends","","Swap the begin and end and reverse the stride, in effect…",33,[[["self"]]]],[11,"len","","Return the number of elements in the iterator.",33,[[["self"]],["usize"]]],[11,"get","","Return a reference to the element of a stride at the given…",33,[[["self"],["usize"]],["option"]]],[11,"from_slice","","Create Stride iterator from a slice and the element step…",34,N],[11,"from_stride","","Create Stride iterator from an existing Stride iterator",34,[[["stridemut"],["isize"]],["stridemut"]]],[11,"swap_ends","","Swap the begin and end and reverse the stride, in effect…",34,[[["self"]]]],[11,"len","","Return the number of elements in the iterator.",34,[[["self"]],["usize"]]],[11,"get","","Return a reference to the element of a stride at the given…",34,[[["self"],["usize"]],["option"]]],[11,"get_mut","","Return a mutable reference to the element of a stride at…",34,[[["self"],["usize"]],["option"]]],[11,"new","","Create a new `ZipLongest` iterator.",35,[[["t"],["u"]],["ziplongest"]]],[11,"new","","Create a new `Zip` from a tuple of iterators.",36,[[["t"]],["zip"]]],[11,"new","","Create a new `ZipSlices` from slices `a` and `b`.",37,N],[11,"from_slices","","Create a new `ZipSlices` from slices `a` and `b`.",37,[[["t"],["u"]],["self"]]],[6,"MapFn","","The function pointer map iterator created with `.map_fn()`.",N,N],[8,"Itertools","","The trait `Itertools`: extra iterator adaptors and methods…",N,N],[11,"interleave","","Alternate elements from two iterators until both run out.",38,[[["self"],["j"]],["interleave"]]],[11,"interleave_shortest","","Alternate elements from two iterators until one of them…",38,[[["self"],["j"]],["interleaveshortest"]]],[11,"intersperse","","An iterator adaptor to insert a particular value between…",38,N],[11,"zip_longest","","Create an iterator which iterates over both this and the…",38,[[["self"],["j"]],["ziplongest"]]],[11,"zip_eq","","Create an iterator which iterates over both this and the…",38,[[["self"],["j"]],["zipeq"]]],[11,"batching","","A “meta iterator adaptor”. Its closure recives a reference…",38,[[["self"],["f"]],["batching"]]],[11,"group_by","","Group iterator elements. Consecutive elements that map to…",38,[[["self"],["f"]],["groupby"]]],[11,"group_by_lazy","","Return an iterable that can group iterator elements.…",38,[[["self"],["f"]],["groupbylazy"]]],[11,"chunks_lazy","","Return an iterable that can chunk the iterator.",38,[[["self"],["usize"]],["chunkslazy"]]],[11,"tee","","Split into an iterator pair that both yield all elements…",38,N],[11,"slice","","Return a sliced iterator.",38,[[["self"],["r"]],["islice"]]],[11,"into_rc","","Return an iterator inside a `Rc<RefCell<_>>` wrapper.",38,[[["self"]],["rciter"]]],[11,"step","","Return an iterator adaptor that steps `n` elements in the…",38,[[["self"],["usize"]],["step"]]],[11,"merge","","Return an iterator adaptor that merges the two base…",38,[[["self"],["j"]],["merge"]]],[11,"merge_by","","Return an iterator adaptor that merges the two base…",38,[[["self"],["j"],["f"]],["mergeby"]]],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of…",38,[[["self"]],["kmerge"]]],[11,"cartesian_product","","Return an iterator adaptor that iterates over the…",38,[[["self"],["j"]],["product"]]],[11,"multipeek","","Return an iterator adapter that allows peeking multiple…",38,[[["self"]],["multipeek"]]],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure…",38,[[["self"],["f"]],["coalesce"]]],[11,"dedup","","Remove duplicates from sections of consecutive identical…",38,[[["self"]],["dedup"]]],[11,"unique","","Return an iterator adaptor that filters out elements that…",38,[[["self"]],["unique"]]],[11,"unique_by","","Return an iterator adaptor that filters out elements that…",38,[[["self"],["f"]],["uniqueby"]]],[11,"mend_slices","","Return an iterator adaptor that joins together adjacent…",38,[[["self"]],["mendslices"]]],[11,"take_while_ref","","Return an iterator adaptor that borrows from a…",38,[[["self"],["f"]],["takewhileref"]]],[11,"while_some","","Return an iterator adaptor that filters `Option<A>`…",38,[[["self"]],["whilesome"]]],[11,"combinations","","Return an iterator adaptor that iterates over the…",38,[[["self"]],["combinations"]]],[11,"combinations_n","","Return an iterator adaptor that iterates over the…",38,[[["self"],["usize"]],["combinationsn"]]],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a…",38,[[["self"],["usize"],["f"]],["padusing"]]],[11,"flatten","","Unravel a nested iterator.",38,[[["self"]],["flatten"]]],[11,"map_fn","","Like regular `.map()`, specialized to using a simple…",38,N],[11,"find_position","","Find the position and value of the first element…",38,[[["self"],["p"]],["option"]]],[11,"dropn","","Consume the first `n` elements of the iterator eagerly.",38,[[["self"],["usize"]],["usize"]]],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,…",38,[[["self"],["usize"]],["self"]]],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,…",38,[[["self"],["usize"]],["self"]]],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",38,[[["self"],["f"]]]],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of…",38,[[["self"]],["vec"]]],[11,"set_from","","Assign to each reference in `self` from the `from`…",38,[[["self"],["j"]],["usize"]]],[11,"join","","Combine all iterator elements into one String, seperated…",38,[[["self"],["str"]],["string"]]],[11,"format_default","","Format all iterator elements, separated by `sep`.",38,[[["self"],["str"]],["formatdefault"]]],[11,"format","","Format all iterator elements, separated by `sep`.",38,[[["self"],["str"],["f"]],["format"]]],[11,"fold_results","","Fold `Result` values from an iterator.",38,[[["self"],["b"],["f"]],["result"]]],[11,"fold_options","","Fold `Option` values from an iterator.",38,[[["self"],["b"],["f"]],["option"]]],[11,"fold1","","Accumulator of the elements in the iterator.",38,[[["self"],["f"]],["option"]]],[11,"fold_while","","An iterator adaptor that applies a function, producing a…",38,[[["self"],["b"],["f"]],["b"]]],[11,"is_empty_hint","","Tell if the iterator is empty or not according to its size…",38,[[["self"]],["option",["bool"]]]],[11,"sorted","","Collect all iterator elements into a sorted vector in…",38,[[["self"]],["vec"]]],[11,"sorted_by","","Collect all iterator elements into a sorted vector.",38,[[["self"],["f"]],["vec"]]],[11,"sort_by","","Deprecated: renamed to `.sorted_by()`",38,[[["self"],["f"]],["vec"]]],[11,"partition_map","","Collect all iterator elements into one of two partitions.…",38,N],[11,"minmax","","Return the minimum and maximum elements in the iterator.",38,[[["self"]],["minmaxresult"]]],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as…",38,[[["self"],["f"]],["minmaxresult"]]],[14,"iproduct","","Create an iterator over the “cartesian product” of…",N,N],[14,"izip","","Create an iterator running multiple iterators in lockstep.",N,N],[11,"from","","",17,[[["t"]],["t"]]],[11,"into_iter","","",17,[[["self"]],["i"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into_iter","","",7,[[["self"]],["i"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into_iter","","",8,[[["self"]],["i"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into_iter","","",11,[[["self"]],["i"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into_iter","","",9,[[["self"]],["i"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into_iter","","",10,[[["self"]],["i"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into_iter","","",12,[[["self"]],["i"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into_iter","","",13,[[["self"]],["i"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into_iter","","",14,[[["self"]],["i"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into_iter","","",39,[[["self"]],["i"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into_iter","","",40,[[["self"]],["i"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into_iter","","",15,[[["self"]],["i"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into_iter","","",19,[[["self"]],["i"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into_iter","","",20,[[["self"]],["i"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into_iter","","",16,[[["self"]],["i"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into_iter","","",18,[[["self"]],["i"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into_iter","","",41,[[["self"]],["i"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into_iter","","",24,[[["self"]],["i"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_string","","",42,[[["self"]],["string"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"to_string","","",43,[[["self"]],["string"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into_iter","","",45,[[["self"]],["i"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into_iter","","",46,[[["self"]],["i"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into_iter","","",48,[[["self"]],["i"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into_iter","","",49,[[["self"]],["i"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into_iter","","",25,[[["self"]],["i"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into_iter","","",26,[[["self"]],["i"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into_iter","","",50,[[["self"]],["i"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into_iter","","",51,[[["self"]],["i"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into_iter","","",30,[[["self"]],["i"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into_iter","","",31,[[["self"]],["i"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into_iter","","",32,[[["self"]],["i"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into_iter","","",33,[[["self"]],["i"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into_iter","","",34,[[["self"]],["i"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into_iter","","",52,[[["self"]],["i"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into_iter","","",53,[[["self"]],["i"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into_iter","","",35,[[["self"]],["i"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into_iter","","",36,[[["self"]],["i"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into_iter","","",37,[[["self"]],["i"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","itertools::misc","",54,[[["t"]],["t"]]],[11,"into_iter","","",54,[[["self"]],["i"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"len","itertools","",33,[[["self"]],["usize"]]],[11,"get_unchecked","","",33,[[["self"],["usize"]],["a"]]],[11,"len","","",34,[[["self"]],["usize"]]],[11,"get_unchecked","","",34,[[["self"],["usize"]],["a"]]],[11,"len","","",37,[[["self"]],["usize"]]],[11,"get_unchecked","","",37,N],[11,"drop","","",48,[[["self"]]]],[11,"drop","","",45,[[["self"]]]],[11,"next_back","","",24,[[["self"]],["option"]]],[11,"next_back","","",51,[[["self"]],["option"]]],[11,"next_back","itertools::misc","",54,[[["self"]],["option"]]],[11,"next_back","itertools","",30,[[["self"]],["option"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",31,[[["self"]],["option"]]],[11,"next_back","","",32,[[["self"]],["option"]]],[11,"next_back","","",33,[[["self"]],["option"]]],[11,"next_back","","",34,[[["self"]],["option"]]],[11,"next_back","","",35,[[["self"]],["option"]]],[11,"next_back","","",37,[[["self"]],["option"]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,N],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,N],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,N],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,N],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,N],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,N],[11,"next","","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,N],[11,"next","","",39,[[["self"]],["option"]]],[11,"size_hint","","",39,N],[11,"next","","",40,[[["self"]],["option"]]],[11,"size_hint","","",40,N],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,N],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,N],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,N],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,N],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,N],[11,"next","","",21,[[["self"]],["option"]]],[11,"size_hint","","",21,N],[11,"next","","",22,[[["self"]],["option"]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"size_hint","","",23,N],[11,"next","","",41,[[["self"]],["option"]]],[11,"size_hint","","",41,N],[11,"next","","",24,[[["self"]],["option"]]],[11,"next","","",49,[[["self"]],["option"]]],[11,"next","","",48,[[["self"]],["option"]]],[11,"next","","",46,[[["self"]],["option"]]],[11,"next","","",45,[[["self"]],["option"]]],[11,"next","","",25,[[["self"]],["option"]]],[11,"size_hint","","",25,N],[11,"next","","",26,[[["self"]],["option"]]],[11,"size_hint","","",26,N],[11,"next","","",50,[[["self"]],["option"]]],[11,"size_hint","","",50,N],[11,"next","","",51,[[["self"]],["option"]]],[11,"size_hint","","",51,N],[11,"next","itertools::misc","",54,[[["self"]],["option"]]],[11,"size_hint","","",54,N],[11,"next","itertools","",30,[[["self"]],["option"]]],[11,"size_hint","","",30,N],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"next","","",31,[[["self"]],["option"]]],[11,"size_hint","","",31,N],[11,"next","","",32,[[["self"]],["option"]]],[11,"size_hint","","",32,N],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,N],[11,"next","","",33,[[["self"]],["option"]]],[11,"size_hint","","",33,N],[11,"next","","",34,[[["self"]],["option"]]],[11,"size_hint","","",34,N],[11,"next","","",52,[[["self"]],["option"]]],[11,"size_hint","","",52,N],[11,"next","","",53,[[["self"]],["option"]]],[11,"size_hint","","",53,N],[11,"next","","",35,[[["self"]],["option"]]],[11,"size_hint","","",35,N],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,N],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,N],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,N],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,N],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,N],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,N],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,N],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,N],[11,"next","","",36,[[["self"]],["option"]]],[11,"size_hint","","",36,N],[11,"next","","",37,[[["self"]],["option"]]],[11,"size_hint","","",37,N],[11,"eq","","",3,[[["self"],["minmaxresult"]],["bool"]]],[11,"ne","","",3,[[["self"],["minmaxresult"]],["bool"]]],[11,"eq","","",4,[[["self"],["eitherorboth"]],["bool"]]],[11,"ne","","",4,[[["self"],["eitherorboth"]],["bool"]]],[11,"clone","","",7,[[["self"]],["interleave"]]],[11,"clone","","",8,[[["self"]],["interleaveshortest"]]],[11,"clone","","",9,[[["self"]],["putback"]]],[11,"clone","","",10,[[["self"]],["self"]]],[11,"clone","","",11,[[["self"]],["product"]]],[11,"clone","","",12,[[["self"]],["batching"]]],[11,"clone","","",13,[[["self"]],["groupby"]]],[11,"clone","","",14,[[["self"]],["step"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",15,[[["self"]],["multipeek"]]],[11,"clone","","",16,[[["self"]],["self"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"clone","","",20,[[["self"]],["whilesome"]]],[11,"clone","","",21,[[["self"]],["combinations"]]],[11,"clone","","",23,[[["self"]],["uniqueby"]]],[11,"clone","","",41,[[["self"]],["unique"]]],[11,"clone","","",24,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["formatdefault"]]],[11,"clone","","",25,[[["self"]],["intersperse"]]],[11,"clone","","",26,[[["self"]],["islice"]]],[11,"clone","","",50,[[["self"]],["kmerge"]]],[11,"clone","","",51,[[["self"]],["linspace"]]],[11,"clone","itertools::misc","",54,[[["self"]],["flattuples"]]],[11,"clone","itertools","",30,[[["self"]],["padusing"]]],[11,"clone","","",0,[[["self"]],["rciter"]]],[11,"clone","","",1,[[["self"]],["unfold"]]],[11,"clone","","",33,[[["self"]],["stride"]]],[11,"clone","","",53,[[["self"]],["zipeq"]]],[11,"clone","","",35,[[["self"]],["ziplongest"]]],[11,"clone","","",4,[[["self"]],["eitherorboth"]]],[11,"clone","","",36,[[["self"]],["zip"]]],[11,"clone","","",37,[[["self"]],["zipslices"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"index","","Return a reference to the element at a given index.",33,[[["self"],["usize"]],["a"]]],[11,"index","","Return a reference to the element at a given index.",34,[[["self"],["usize"]],["a"]]],[11,"index_mut","","Return a mutable reference to the element at a given index.",34,[[["self"],["usize"]],["a"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"RcIter"],[3,"Unfold"],[4,"Diff"],[4,"MinMaxResult"],[4,"EitherOrBoth"],[4,"Partition"],[4,"FoldWhile"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"PutBack"],[3,"PutBackN"],[3,"Product"],[3,"Batching"],[3,"GroupBy"],[3,"Step"],[3,"MultiPeek"],[3,"Coalesce"],[3,"Dedup"],[3,"MendSlices"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Combinations"],[3,"CombinationsN"],[3,"UniqueBy"],[3,"Flatten"],[3,"Intersperse"],[3,"ISlice"],[8,"IntoIteratorTuple"],[8,"AppendTuple"],[8,"Slice"],[3,"PadUsing"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Stride"],[3,"StrideMut"],[3,"ZipLongest"],[3,"Zip"],[3,"ZipSlices"],[8,"Itertools"],[3,"Merge"],[3,"MergeBy"],[3,"Unique"],[3,"Format"],[3,"FormatDefault"],[3,"ChunksLazy"],[3,"Chunk"],[3,"Chunks"],[3,"GroupByLazy"],[3,"Group"],[3,"Groups"],[3,"KMerge"],[3,"Linspace"],[3,"Tee"],[3,"ZipEq"],[3,"FlatTuples"]]};
searchIndex["libc"]={"doc":"Crate docs","items":[[3,"utimbuf","libc","",N,N],[12,"actime","","",0,N],[12,"modtime","","",0,N],[3,"timeval","","",N,N],[12,"tv_sec","","",1,N],[12,"tv_usec","","",1,N],[3,"timespec","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_nsec","","",2,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",3,N],[12,"rlim_max","","",3,N],[3,"rusage","","",N,N],[12,"ru_utime","","",4,N],[12,"ru_stime","","",4,N],[12,"ru_maxrss","","",4,N],[12,"ru_ixrss","","",4,N],[12,"ru_idrss","","",4,N],[12,"ru_isrss","","",4,N],[12,"ru_minflt","","",4,N],[12,"ru_majflt","","",4,N],[12,"ru_nswap","","",4,N],[12,"ru_inblock","","",4,N],[12,"ru_oublock","","",4,N],[12,"ru_msgsnd","","",4,N],[12,"ru_msgrcv","","",4,N],[12,"ru_nsignals","","",4,N],[12,"ru_nvcsw","","",4,N],[12,"ru_nivcsw","","",4,N],[3,"in_addr","","",N,N],[12,"s_addr","","",5,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",6,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",7,N],[12,"imr_interface","","",7,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",8,N],[12,"ipv6mr_interface","","",8,N],[3,"hostent","","",N,N],[12,"h_name","","",9,N],[12,"h_aliases","","",9,N],[12,"h_addrtype","","",9,N],[12,"h_length","","",9,N],[12,"h_addr_list","","",9,N],[3,"iovec","","",N,N],[12,"iov_base","","",10,N],[12,"iov_len","","",10,N],[3,"pollfd","","",N,N],[12,"fd","","",11,N],[12,"events","","",11,N],[12,"revents","","",11,N],[3,"winsize","","",N,N],[12,"ws_row","","",12,N],[12,"ws_col","","",12,N],[12,"ws_xpixel","","",12,N],[12,"ws_ypixel","","",12,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",13,N],[12,"sa_data","","",13,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",14,N],[12,"sin_port","","",14,N],[12,"sin_addr","","",14,N],[12,"sin_zero","","",14,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",15,N],[12,"sin6_port","","",15,N],[12,"sin6_flowinfo","","",15,N],[12,"sin6_addr","","",15,N],[12,"sin6_scope_id","","",15,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",16,N],[12,"sun_path","","",16,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",17,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",18,N],[12,"ai_family","","",18,N],[12,"ai_socktype","","",18,N],[12,"ai_protocol","","",18,N],[12,"ai_addrlen","","",18,N],[12,"ai_addr","","",18,N],[12,"ai_canonname","","",18,N],[12,"ai_next","","",18,N],[3,"sockaddr_nl","","",N,N],[12,"nl_family","","",19,N],[12,"nl_pid","","",19,N],[12,"nl_groups","","",19,N],[3,"sockaddr_ll","","",N,N],[12,"sll_family","","",20,N],[12,"sll_protocol","","",20,N],[12,"sll_ifindex","","",20,N],[12,"sll_hatype","","",20,N],[12,"sll_pkttype","","",20,N],[12,"sll_halen","","",20,N],[12,"sll_addr","","",20,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",21,N],[12,"tm_min","","",21,N],[12,"tm_hour","","",21,N],[12,"tm_mday","","",21,N],[12,"tm_mon","","",21,N],[12,"tm_year","","",21,N],[12,"tm_wday","","",21,N],[12,"tm_yday","","",21,N],[12,"tm_isdst","","",21,N],[12,"tm_gmtoff","","",21,N],[12,"tm_zone","","",21,N],[3,"sched_param","","",N,N],[12,"sched_priority","","",22,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",23,N],[12,"dli_fbase","","",23,N],[12,"dli_sname","","",23,N],[12,"dli_saddr","","",23,N],[3,"epoll_event","","",N,N],[12,"events","","",24,N],[12,"u64","","",24,N],[3,"utsname","","",N,N],[12,"sysname","","",25,N],[12,"nodename","","",25,N],[12,"release","","",25,N],[12,"version","","",25,N],[12,"machine","","",25,N],[12,"domainname","","",25,N],[3,"lconv","","",N,N],[12,"decimal_point","","",26,N],[12,"thousands_sep","","",26,N],[12,"grouping","","",26,N],[12,"int_curr_symbol","","",26,N],[12,"currency_symbol","","",26,N],[12,"mon_decimal_point","","",26,N],[12,"mon_thousands_sep","","",26,N],[12,"mon_grouping","","",26,N],[12,"positive_sign","","",26,N],[12,"negative_sign","","",26,N],[12,"int_frac_digits","","",26,N],[12,"frac_digits","","",26,N],[12,"p_cs_precedes","","",26,N],[12,"p_sep_by_space","","",26,N],[12,"n_cs_precedes","","",26,N],[12,"n_sep_by_space","","",26,N],[12,"p_sign_posn","","",26,N],[12,"n_sign_posn","","",26,N],[12,"int_p_cs_precedes","","",26,N],[12,"int_p_sep_by_space","","",26,N],[12,"int_n_cs_precedes","","",26,N],[12,"int_n_sep_by_space","","",26,N],[12,"int_p_sign_posn","","",26,N],[12,"int_n_sign_posn","","",26,N],[3,"dirent","","",N,N],[12,"d_ino","","",27,N],[12,"d_off","","",27,N],[12,"d_reclen","","",27,N],[12,"d_type","","",27,N],[12,"d_name","","",27,N],[3,"dirent64","","",N,N],[12,"d_ino","","",28,N],[12,"d_off","","",28,N],[12,"d_reclen","","",28,N],[12,"d_type","","",28,N],[12,"d_name","","",28,N],[3,"rlimit64","","",N,N],[12,"rlim_cur","","",29,N],[12,"rlim_max","","",29,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",30,N],[12,"gl_pathv","","",30,N],[12,"gl_offs","","",30,N],[12,"gl_flags","","",30,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",31,N],[12,"ifa_name","","",31,N],[12,"ifa_flags","","",31,N],[12,"ifa_addr","","",31,N],[12,"ifa_netmask","","",31,N],[12,"ifa_ifu","","",31,N],[12,"ifa_data","","",31,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"passwd","","",N,N],[12,"pw_name","","",32,N],[12,"pw_passwd","","",32,N],[12,"pw_uid","","",32,N],[12,"pw_gid","","",32,N],[12,"pw_gecos","","",32,N],[12,"pw_dir","","",32,N],[12,"pw_shell","","",32,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",33,N],[12,"f_frsize","","",33,N],[12,"f_blocks","","",33,N],[12,"f_bfree","","",33,N],[12,"f_bavail","","",33,N],[12,"f_files","","",33,N],[12,"f_ffree","","",33,N],[12,"f_favail","","",33,N],[12,"f_fsid","","",33,N],[12,"f_flag","","",33,N],[12,"f_namemax","","",33,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",34,N],[12,"dqb_bsoftlimit","","",34,N],[12,"dqb_curspace","","",34,N],[12,"dqb_ihardlimit","","",34,N],[12,"dqb_isoftlimit","","",34,N],[12,"dqb_curinodes","","",34,N],[12,"dqb_btime","","",34,N],[12,"dqb_itime","","",34,N],[12,"dqb_valid","","",34,N],[3,"signalfd_siginfo","","",N,N],[12,"ssi_signo","","",35,N],[12,"ssi_errno","","",35,N],[12,"ssi_code","","",35,N],[12,"ssi_pid","","",35,N],[12,"ssi_uid","","",35,N],[12,"ssi_fd","","",35,N],[12,"ssi_tid","","",35,N],[12,"ssi_band","","",35,N],[12,"ssi_overrun","","",35,N],[12,"ssi_trapno","","",35,N],[12,"ssi_status","","",35,N],[12,"ssi_int","","",35,N],[12,"ssi_ptr","","",35,N],[12,"ssi_utime","","",35,N],[12,"ssi_stime","","",35,N],[12,"ssi_addr","","",35,N],[3,"fsid_t","","",N,N],[3,"mq_attr","","",N,N],[12,"mq_flags","","",36,N],[12,"mq_maxmsg","","",36,N],[12,"mq_msgsize","","",36,N],[12,"mq_curmsgs","","",36,N],[3,"cpu_set_t","","",N,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",37,N],[12,"sa_mask","","",37,N],[12,"sa_flags","","",37,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",38,N],[12,"ss_flags","","",38,N],[12,"ss_size","","",38,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",39,N],[12,"si_errno","","",39,N],[12,"si_code","","",39,N],[12,"_pad","","",39,N],[3,"glob64_t","","",N,N],[12,"gl_pathc","","",40,N],[12,"gl_pathv","","",40,N],[12,"gl_offs","","",40,N],[12,"gl_flags","","",40,N],[3,"ucred","","",N,N],[12,"pid","","",41,N],[12,"uid","","",41,N],[12,"gid","","",41,N],[3,"statfs","","",N,N],[12,"f_type","","",42,N],[12,"f_bsize","","",42,N],[12,"f_blocks","","",42,N],[12,"f_bfree","","",42,N],[12,"f_bavail","","",42,N],[12,"f_files","","",42,N],[12,"f_ffree","","",42,N],[12,"f_fsid","","",42,N],[12,"f_namelen","","",42,N],[12,"f_frsize","","",42,N],[3,"msghdr","","",N,N],[12,"msg_name","","",43,N],[12,"msg_namelen","","",43,N],[12,"msg_iov","","",43,N],[12,"msg_iovlen","","",43,N],[12,"msg_control","","",43,N],[12,"msg_controllen","","",43,N],[12,"msg_flags","","",43,N],[3,"termios","","",N,N],[12,"c_iflag","","",44,N],[12,"c_oflag","","",44,N],[12,"c_cflag","","",44,N],[12,"c_lflag","","",44,N],[12,"c_line","","",44,N],[12,"c_cc","","",44,N],[12,"c_ispeed","","",44,N],[12,"c_ospeed","","",44,N],[3,"flock","","",N,N],[12,"l_type","","",45,N],[12,"l_whence","","",45,N],[12,"l_start","","",45,N],[12,"l_len","","",45,N],[12,"l_pid","","",45,N],[3,"ipc_perm","","",N,N],[12,"__key","","",46,N],[12,"uid","","",46,N],[12,"gid","","",46,N],[12,"cuid","","",46,N],[12,"cgid","","",46,N],[12,"mode","","",46,N],[12,"__seq","","",46,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",47,N],[12,"shm_segsz","","",47,N],[12,"shm_atime","","",47,N],[12,"shm_dtime","","",47,N],[12,"shm_ctime","","",47,N],[12,"shm_cpid","","",47,N],[12,"shm_lpid","","",47,N],[12,"shm_nattch","","",47,N],[3,"sigset_t","","",N,N],[3,"stat","","",N,N],[12,"st_dev","","",48,N],[12,"st_ino","","",48,N],[12,"st_nlink","","",48,N],[12,"st_mode","","",48,N],[12,"st_uid","","",48,N],[12,"st_gid","","",48,N],[12,"st_rdev","","",48,N],[12,"st_size","","",48,N],[12,"st_blksize","","",48,N],[12,"st_blocks","","",48,N],[12,"st_atime","","",48,N],[12,"st_atime_nsec","","",48,N],[12,"st_mtime","","",48,N],[12,"st_mtime_nsec","","",48,N],[12,"st_ctime","","",48,N],[12,"st_ctime_nsec","","",48,N],[3,"stat64","","",N,N],[12,"st_dev","","",49,N],[12,"st_ino","","",49,N],[12,"st_nlink","","",49,N],[12,"st_mode","","",49,N],[12,"st_uid","","",49,N],[12,"st_gid","","",49,N],[12,"st_rdev","","",49,N],[12,"st_size","","",49,N],[12,"st_blksize","","",49,N],[12,"st_blocks","","",49,N],[12,"st_atime","","",49,N],[12,"st_atime_nsec","","",49,N],[12,"st_mtime","","",49,N],[12,"st_mtime_nsec","","",49,N],[12,"st_ctime","","",49,N],[12,"st_ctime_nsec","","",49,N],[3,"pthread_attr_t","","",N,N],[3,"mcontext_t","","",N,N],[3,"ucontext_t","","",N,N],[12,"uc_flags","","",50,N],[12,"uc_link","","",50,N],[12,"uc_stack","","",50,N],[12,"uc_mcontext","","",50,N],[12,"uc_sigmask","","",50,N],[4,"c_void","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"timezone","","",N,N],[4,"fpos64_t","","",N,N],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"CPU_ZERO","","",N,N],[5,"CPU_SET","","",N,N],[5,"CPU_ISSET","","",N,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",N,[[["cpu_set_t"],["cpu_set_t"]],["bool"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"memcmp","","",N,N],[5,"memchr","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"bind","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"popen","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"chown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"getdtablesize","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_create","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"pthread_kill","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"sigaltstack","","",N,N],[5,"sigwait","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"mknod","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"uname","","",N,N],[5,"daemon","","",N,N],[5,"gethostname","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"getsid","","",N,N],[5,"madvise","","",N,N],[5,"readlink","","",N,N],[5,"msync","","",N,N],[5,"sysconf","","",N,N],[5,"recvfrom","","",N,N],[5,"mkfifo","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"timegm","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkstemps","","",N,N],[5,"mkdtemp","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"getpwuid_r","","",N,N],[5,"fdatasync","","",N,N],[5,"mincore","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"prctl","","",N,N],[5,"pthread_getattr_np","","",N,N],[5,"pthread_attr_getguardsize","","",N,N],[5,"pthread_attr_getstack","","",N,N],[5,"memalign","","",N,N],[5,"setgroups","","",N,N],[5,"sched_setscheduler","","",N,N],[5,"sched_getscheduler","","",N,N],[5,"sched_get_priority_max","","",N,N],[5,"sched_get_priority_min","","",N,N],[5,"epoll_create","","",N,N],[5,"epoll_ctl","","",N,N],[5,"epoll_wait","","",N,N],[5,"pipe2","","",N,N],[5,"mount","","",N,N],[5,"umount","","",N,N],[5,"umount2","","",N,N],[5,"clone","","",N,N],[5,"statfs","","",N,N],[5,"fstatfs","","",N,N],[5,"memrchr","","",N,N],[5,"syscall","","",N,N],[5,"sendfile","","",N,N],[5,"splice","","",N,N],[5,"tee","","",N,N],[5,"vmsplice","","",N,N],[5,"posix_fadvise","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"shm_open","","",N,N],[5,"shmget","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"mprotect","","",N,N],[5,"__errno_location","","",N,N],[5,"fopen64","","",N,N],[5,"freopen64","","",N,N],[5,"tmpfile64","","",N,N],[5,"fgetpos64","","",N,N],[5,"fsetpos64","","",N,N],[5,"fstat64","","",N,N],[5,"stat64","","",N,N],[5,"open64","","",N,N],[5,"creat64","","",N,N],[5,"lseek64","","",N,N],[5,"pread64","","",N,N],[5,"pwrite64","","",N,N],[5,"mmap64","","",N,N],[5,"lstat64","","",N,N],[5,"ftruncate64","","",N,N],[5,"readdir64_r","","",N,N],[5,"getrlimit64","","",N,N],[5,"setrlimit64","","",N,N],[5,"fseeko64","","",N,N],[5,"ftello64","","",N,N],[5,"fallocate","","",N,N],[5,"posix_fallocate","","",N,N],[5,"readahead","","",N,N],[5,"getxattr","","",N,N],[5,"lgetxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"lsetxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"llistxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"lremovexattr","","",N,N],[5,"fremovexattr","","",N,N],[5,"signalfd","","",N,N],[5,"pwritev","","",N,N],[5,"preadv","","",N,N],[5,"quotactl","","",N,N],[5,"mq_open","","",N,N],[5,"mq_close","","",N,N],[5,"mq_unlink","","",N,N],[5,"mq_receive","","",N,N],[5,"mq_send","","",N,N],[5,"mq_getattr","","",N,N],[5,"mq_setattr","","",N,N],[5,"sched_getaffinity","","",N,N],[5,"sched_setaffinity","","",N,N],[5,"epoll_pwait","","",N,N],[5,"dup3","","",N,N],[5,"unshare","","",N,N],[5,"sethostname","","",N,N],[5,"setns","","",N,N],[5,"mkostemp","","",N,N],[5,"mkostemps","","",N,N],[5,"sigtimedwait","","",N,N],[5,"sigwaitinfo","","",N,N],[5,"openpty","","",N,N],[5,"forkpty","","",N,N],[5,"nl_langinfo_l","","",N,N],[5,"sysctl","","",N,N],[5,"ioctl","","",N,N],[5,"backtrace","","",N,N],[5,"glob64","","",N,N],[5,"globfree64","","",N,N],[5,"getnameinfo","","",N,N],[5,"eventfd","","",N,N],[5,"ptrace","","",N,N],[5,"pthread_attr_getaffinity_np","","",N,N],[5,"pthread_attr_setaffinity_np","","",N,N],[5,"getcontext","","",N,N],[5,"setcontext","","",N,N],[5,"makecontext","","",N,N],[5,"swapcontext","","",N,N],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"loff_t","","",N,N],[6,"clockid_t","","",N,N],[6,"useconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"socklen_t","","",N,N],[6,"pthread_t","","",N,N],[6,"mode_t","","",N,N],[6,"ino64_t","","",N,N],[6,"off64_t","","",N,N],[6,"blkcnt64_t","","",N,N],[6,"rlim64_t","","",N,N],[6,"key_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"mqd_t","","",N,N],[6,"nfds_t","","",N,N],[6,"nl_item","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"rlim_t","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"ino_t","","",N,N],[6,"off_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"c_char","","",N,N],[6,"wchar_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_SETLEASE","","",N,N],[17,"F_GETLEASE","","",N,N],[17,"F_NOTIFY","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_SETPIPE_SZ","","",N,N],[17,"F_GETPIPE_SZ","","",N,N],[17,"SIGTRAP","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"CLOCK_MONOTONIC_RAW","","",N,N],[17,"CLOCK_REALTIME_COARSE","","",N,N],[17,"CLOCK_MONOTONIC_COARSE","","",N,N],[17,"CLOCK_BOOTTIME","","",N,N],[17,"CLOCK_REALTIME_ALARM","","",N,N],[17,"CLOCK_BOOTTIME_ALARM","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_LOCKS","","",N,N],[17,"RLIMIT_SIGPENDING","","",N,N],[17,"RLIMIT_MSGQUEUE","","",N,N],[17,"RLIMIT_NICE","","",N,N],[17,"RLIMIT_RTPRIO","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"SOCK_CLOEXEC","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_RDONLY","","",N,N],[17,"MS_NOSUID","","",N,N],[17,"MS_NODEV","","",N,N],[17,"MS_NOEXEC","","",N,N],[17,"MS_SYNCHRONOUS","","",N,N],[17,"MS_REMOUNT","","",N,N],[17,"MS_MANDLOCK","","",N,N],[17,"MS_DIRSYNC","","",N,N],[17,"MS_NOATIME","","",N,N],[17,"MS_NODIRATIME","","",N,N],[17,"MS_BIND","","",N,N],[17,"MS_MOVE","","",N,N],[17,"MS_REC","","",N,N],[17,"MS_SILENT","","",N,N],[17,"MS_POSIXACL","","",N,N],[17,"MS_UNBINDABLE","","",N,N],[17,"MS_PRIVATE","","",N,N],[17,"MS_SLAVE","","",N,N],[17,"MS_SHARED","","",N,N],[17,"MS_RELATIME","","",N,N],[17,"MS_KERNMOUNT","","",N,N],[17,"MS_I_VERSION","","",N,N],[17,"MS_STRICTATIME","","",N,N],[17,"MS_ACTIVE","","",N,N],[17,"MS_NOUSER","","",N,N],[17,"MS_MGC_VAL","","",N,N],[17,"MS_MGC_MSK","","",N,N],[17,"MS_RMT_MASK","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EAGAIN","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"EBFONT","","",N,N],[17,"ENOSTR","","",N,N],[17,"ENODATA","","",N,N],[17,"ETIME","","",N,N],[17,"ENOSR","","",N,N],[17,"ENONET","","",N,N],[17,"ENOPKG","","",N,N],[17,"EREMOTE","","",N,N],[17,"ENOLINK","","",N,N],[17,"EADV","","",N,N],[17,"ESRMNT","","",N,N],[17,"ECOMM","","",N,N],[17,"EPROTO","","",N,N],[17,"EDOTDOT","","",N,N],[17,"AF_PACKET","","",N,N],[17,"IPPROTO_RAW","","",N,N],[17,"PROT_GROWSDOWN","","",N,N],[17,"PROT_GROWSUP","","",N,N],[17,"MAP_TYPE","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_REMOVE","","",N,N],[17,"MADV_DONTFORK","","",N,N],[17,"MADV_DOFORK","","",N,N],[17,"MADV_MERGEABLE","","",N,N],[17,"MADV_UNMERGEABLE","","",N,N],[17,"MADV_HWPOISON","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_INET6","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_TRANSPARENT","","",N,N],[17,"IPV6_ADD_MEMBERSHIP","","",N,N],[17,"IPV6_DROP_MEMBERSHIP","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"TCP_CORK","","",N,N],[17,"TCP_KEEPIDLE","","",N,N],[17,"TCP_KEEPINTVL","","",N,N],[17,"TCP_KEEPCNT","","",N,N],[17,"TCP_SYNCNT","","",N,N],[17,"TCP_LINGER2","","",N,N],[17,"TCP_DEFER_ACCEPT","","",N,N],[17,"TCP_WINDOW_CLAMP","","",N,N],[17,"TCP_INFO","","",N,N],[17,"TCP_QUICKACK","","",N,N],[17,"TCP_CONGESTION","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"PATH_MAX","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"EPOLLIN","","",N,N],[17,"EPOLLPRI","","",N,N],[17,"EPOLLOUT","","",N,N],[17,"EPOLLRDNORM","","",N,N],[17,"EPOLLRDBAND","","",N,N],[17,"EPOLLWRNORM","","",N,N],[17,"EPOLLWRBAND","","",N,N],[17,"EPOLLMSG","","",N,N],[17,"EPOLLERR","","",N,N],[17,"EPOLLHUP","","",N,N],[17,"EPOLLET","","",N,N],[17,"EPOLL_CTL_ADD","","",N,N],[17,"EPOLL_CTL_MOD","","",N,N],[17,"EPOLL_CTL_DEL","","",N,N],[17,"MNT_DETACH","","",N,N],[17,"MNT_EXPIRE","","",N,N],[17,"Q_GETFMT","","",N,N],[17,"Q_GETINFO","","",N,N],[17,"Q_SETINFO","","",N,N],[17,"QIF_BLIMITS","","",N,N],[17,"QIF_SPACE","","",N,N],[17,"QIF_ILIMITS","","",N,N],[17,"QIF_INODES","","",N,N],[17,"QIF_BTIME","","",N,N],[17,"QIF_ITIME","","",N,N],[17,"QIF_LIMITS","","",N,N],[17,"QIF_USAGE","","",N,N],[17,"QIF_TIMES","","",N,N],[17,"QIF_ALL","","",N,N],[17,"CBAUD","","",N,N],[17,"EFD_CLOEXEC","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"TAB3","","",N,N],[17,"CR0","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF0","","",N,N],[17,"FF1","","",N,N],[17,"BS0","","",N,N],[17,"BS1","","",N,N],[17,"VT0","","",N,N],[17,"VT1","","",N,N],[17,"VERASE","","",N,N],[17,"VWERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VREPRINT","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VLNEXT","","",N,N],[17,"VDISCARD","","",N,N],[17,"VTIME","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"ONLCR","","",N,N],[17,"CSIZE","","",N,N],[17,"CS5","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"CRTSCTS","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHO","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"CLONE_VM","","",N,N],[17,"CLONE_FS","","",N,N],[17,"CLONE_FILES","","",N,N],[17,"CLONE_SIGHAND","","",N,N],[17,"CLONE_PTRACE","","",N,N],[17,"CLONE_VFORK","","",N,N],[17,"CLONE_PARENT","","",N,N],[17,"CLONE_THREAD","","",N,N],[17,"CLONE_NEWNS","","",N,N],[17,"CLONE_SYSVSEM","","",N,N],[17,"CLONE_SETTLS","","",N,N],[17,"CLONE_PARENT_SETTID","","",N,N],[17,"CLONE_CHILD_CLEARTID","","",N,N],[17,"CLONE_DETACHED","","",N,N],[17,"CLONE_UNTRACED","","",N,N],[17,"CLONE_CHILD_SETTID","","",N,N],[17,"CLONE_NEWUTS","","",N,N],[17,"CLONE_NEWIPC","","",N,N],[17,"CLONE_NEWUSER","","",N,N],[17,"CLONE_NEWPID","","",N,N],[17,"CLONE_NEWNET","","",N,N],[17,"CLONE_IO","","",N,N],[17,"WNOHANG","","",N,N],[17,"SPLICE_F_MOVE","","",N,N],[17,"SPLICE_F_NONBLOCK","","",N,N],[17,"SPLICE_F_MORE","","",N,N],[17,"SPLICE_F_GIFT","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"POSIX_FADV_NORMAL","","",N,N],[17,"POSIX_FADV_RANDOM","","",N,N],[17,"POSIX_FADV_SEQUENTIAL","","",N,N],[17,"POSIX_FADV_WILLNEED","","",N,N],[17,"POSIX_FADV_DONTNEED","","",N,N],[17,"POSIX_FADV_NOREUSE","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"CODESET","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"RLIM_SAVED_MAX","","",N,N],[17,"RLIM_SAVED_CUR","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"ST_NODEV","","",N,N],[17,"ST_NOEXEC","","",N,N],[17,"ST_SYNCHRONOUS","","",N,N],[17,"ST_MANDLOCK","","",N,N],[17,"ST_WRITE","","",N,N],[17,"ST_APPEND","","",N,N],[17,"ST_IMMUTABLE","","",N,N],[17,"ST_NOATIME","","",N,N],[17,"ST_NODIRATIME","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"TCP_MD5SIG","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"SCHED_OTHER","","",N,N],[17,"SCHED_FIFO","","",N,N],[17,"SCHED_RR","","",N,N],[17,"SCHED_BATCH","","",N,N],[17,"SCHED_IDLE","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_INFO","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHM_REMAP","","",N,N],[17,"SHM_EXEC","","",N,N],[17,"SHM_LOCK","","",N,N],[17,"SHM_UNLOCK","","",N,N],[17,"SHM_HUGETLB","","",N,N],[17,"SHM_NORESERVE","","",N,N],[17,"EPOLLRDHUP","","",N,N],[17,"EPOLLONESHOT","","",N,N],[17,"QFMT_VFS_OLD","","",N,N],[17,"QFMT_VFS_V0","","",N,N],[17,"SFD_CLOEXEC","","",N,N],[17,"EFD_SEMAPHORE","","",N,N],[17,"NCCS","","",N,N],[17,"AF_NETLINK","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RLIMIT_RTTIME","","",N,N],[17,"RLIMIT_NLIMITS","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_RSYNC","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_FSYNC","","",N,N],[17,"SOCK_NONBLOCK","","",N,N],[17,"LC_PAPER","","",N,N],[17,"LC_NAME","","",N,N],[17,"LC_ADDRESS","","",N,N],[17,"LC_TELEPHONE","","",N,N],[17,"LC_MEASUREMENT","","",N,N],[17,"LC_IDENTIFICATION","","",N,N],[17,"LC_PAPER_MASK","","",N,N],[17,"LC_NAME_MASK","","",N,N],[17,"LC_ADDRESS_MASK","","",N,N],[17,"LC_TELEPHONE_MASK","","",N,N],[17,"LC_MEASUREMENT_MASK","","",N,N],[17,"LC_IDENTIFICATION_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"MAP_GROWSDOWN","","",N,N],[17,"MAP_DENYWRITE","","",N,N],[17,"MAP_EXECUTABLE","","",N,N],[17,"MAP_POPULATE","","",N,N],[17,"MAP_NONBLOCK","","",N,N],[17,"MAP_STACK","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"ELOOP","","",N,N],[17,"ENOMSG","","",N,N],[17,"EIDRM","","",N,N],[17,"ECHRNG","","",N,N],[17,"EL2NSYNC","","",N,N],[17,"EL3HLT","","",N,N],[17,"EL3RST","","",N,N],[17,"ELNRNG","","",N,N],[17,"EUNATCH","","",N,N],[17,"ENOCSI","","",N,N],[17,"EL2HLT","","",N,N],[17,"EBADE","","",N,N],[17,"EBADR","","",N,N],[17,"EXFULL","","",N,N],[17,"ENOANO","","",N,N],[17,"EBADRQC","","",N,N],[17,"EBADSLT","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"ENOTUNIQ","","",N,N],[17,"EBADFD","","",N,N],[17,"EBADMSG","","",N,N],[17,"EREMCHG","","",N,N],[17,"ELIBACC","","",N,N],[17,"ELIBBAD","","",N,N],[17,"ELIBSCN","","",N,N],[17,"ELIBMAX","","",N,N],[17,"ELIBEXEC","","",N,N],[17,"EILSEQ","","",N,N],[17,"ERESTART","","",N,N],[17,"ESTRPIPE","","",N,N],[17,"EUSERS","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"EALREADY","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"ESTALE","","",N,N],[17,"EUCLEAN","","",N,N],[17,"ENOTNAM","","",N,N],[17,"ENAVAIL","","",N,N],[17,"EISNAM","","",N,N],[17,"EREMOTEIO","","",N,N],[17,"EDQUOT","","",N,N],[17,"ENOMEDIUM","","",N,N],[17,"EMEDIUMTYPE","","",N,N],[17,"ECANCELED","","",N,N],[17,"ENOKEY","","",N,N],[17,"EKEYEXPIRED","","",N,N],[17,"EKEYREVOKED","","",N,N],[17,"EKEYREJECTED","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EHWPOISON","","",N,N],[17,"ERFKILL","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"TCP_COOKIE_TRANSACTIONS","","",N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",N,N],[17,"TCP_THIN_DUPACK","","",N,N],[17,"TCP_USER_TIMEOUT","","",N,N],[17,"TCP_REPAIR","","",N,N],[17,"TCP_REPAIR_QUEUE","","",N,N],[17,"TCP_QUEUE_SEQ","","",N,N],[17,"TCP_REPAIR_OPTIONS","","",N,N],[17,"TCP_FASTOPEN","","",N,N],[17,"TCP_TIMESTAMP","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGSTKFLT","","",N,N],[17,"SIGUNUSED","","",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGPWR","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"FALLOC_FL_KEEP_SIZE","","",N,N],[17,"FALLOC_FL_PUNCH_HOLE","","",N,N],[17,"BUFSIZ","","",N,N],[17,"TMP_MAX","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_2_C_VERSION","","",N,N],[17,"RUSAGE_THREAD","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"ST_RELATIME","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"ADFS_SUPER_MAGIC","","",N,N],[17,"AFFS_SUPER_MAGIC","","",N,N],[17,"CODA_SUPER_MAGIC","","",N,N],[17,"CRAMFS_MAGIC","","",N,N],[17,"EFS_SUPER_MAGIC","","",N,N],[17,"EXT2_SUPER_MAGIC","","",N,N],[17,"EXT3_SUPER_MAGIC","","",N,N],[17,"EXT4_SUPER_MAGIC","","",N,N],[17,"HPFS_SUPER_MAGIC","","",N,N],[17,"HUGETLBFS_MAGIC","","",N,N],[17,"ISOFS_SUPER_MAGIC","","",N,N],[17,"JFFS2_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC2","","",N,N],[17,"MINIX2_SUPER_MAGIC","","",N,N],[17,"MINIX2_SUPER_MAGIC2","","",N,N],[17,"MSDOS_SUPER_MAGIC","","",N,N],[17,"NCP_SUPER_MAGIC","","",N,N],[17,"NFS_SUPER_MAGIC","","",N,N],[17,"OPENPROM_SUPER_MAGIC","","",N,N],[17,"PROC_SUPER_MAGIC","","",N,N],[17,"QNX4_SUPER_MAGIC","","",N,N],[17,"REISERFS_SUPER_MAGIC","","",N,N],[17,"SMB_SUPER_MAGIC","","",N,N],[17,"TMPFS_MAGIC","","",N,N],[17,"USBDEVICE_SUPER_MAGIC","","",N,N],[17,"VEOF","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VMIN","","",N,N],[17,"IEXTEN","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"IUTF8","","",N,N],[17,"CPU_SETSIZE","","",N,N],[17,"EXTPROC","","",N,N],[17,"QFMT_VFS_V1","","",N,N],[17,"PTRACE_TRACEME","","",N,N],[17,"PTRACE_PEEKTEXT","","",N,N],[17,"PTRACE_PEEKDATA","","",N,N],[17,"PTRACE_PEEKUSER","","",N,N],[17,"PTRACE_POKETEXT","","",N,N],[17,"PTRACE_POKEDATA","","",N,N],[17,"PTRACE_POKEUSER","","",N,N],[17,"PTRACE_CONT","","",N,N],[17,"PTRACE_KILL","","",N,N],[17,"PTRACE_SINGLESTEP","","",N,N],[17,"PTRACE_ATTACH","","",N,N],[17,"PTRACE_DETACH","","",N,N],[17,"PTRACE_SYSCALL","","",N,N],[17,"PTRACE_SETOPTIONS","","",N,N],[17,"PTRACE_GETEVENTMSG","","",N,N],[17,"PTRACE_GETSIGINFO","","",N,N],[17,"PTRACE_SETSIGINFO","","",N,N],[17,"PTRACE_GETREGSET","","",N,N],[17,"PTRACE_SETREGSET","","",N,N],[17,"PTRACE_SEIZE","","",N,N],[17,"PTRACE_INTERRUPT","","",N,N],[17,"PTRACE_LISTEN","","",N,N],[17,"PTRACE_PEEKSIGINFO","","",N,N],[17,"MADV_DODUMP","","",N,N],[17,"MADV_DONTDUMP","","",N,N],[17,"EPOLLWAKEUP","","",N,N],[17,"MADV_HUGEPAGE","","",N,N],[17,"MADV_NOHUGEPAGE","","",N,N],[17,"MAP_HUGETLB","","",N,N],[17,"EFD_NONBLOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"SFD_NONBLOCK","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"TCGETS","","",N,N],[17,"TCSETS","","",N,N],[17,"TCSETSW","","",N,N],[17,"TCSETSF","","",N,N],[17,"TCGETA","","",N,N],[17,"TCSETA","","",N,N],[17,"TCSETAW","","",N,N],[17,"TCSETAF","","",N,N],[17,"TCSBRK","","",N,N],[17,"TCXONC","","",N,N],[17,"TCFLSH","","",N,N],[17,"TIOCGSOFTCAR","","",N,N],[17,"TIOCSSOFTCAR","","",N,N],[17,"TIOCINQ","","",N,N],[17,"TIOCLINUX","","",N,N],[17,"TIOCGSERIAL","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMSET","","",N,N],[17,"FIONREAD","","",N,N],[17,"TIOCCONS","","",N,N],[17,"RTLD_DEEPBIND","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"O_DIRECT","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"MAP_LOCKED","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_32BIT","","",N,N],[17,"EDEADLOCK","","",N,N],[17,"SO_PEERCRED","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PTRACE_GETFPREGS","","",N,N],[17,"PTRACE_SETFPREGS","","",N,N],[17,"PTRACE_GETFPXREGS","","",N,N],[17,"PTRACE_SETFPXREGS","","",N,N],[17,"PTRACE_GETREGS","","",N,N],[17,"PTRACE_SETREGS","","",N,N],[17,"SYS_gettid","","",N,N],[17,"SYS_perf_event_open","","",N,N],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,N],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,N],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,N],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[["self"]],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,N],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"try_into","","",51,[[["self"]],["result"]]],[11,"get_type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,N],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,N],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,N],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,N],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,N],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,N],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,N],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[["self"]],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,N],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"try_into","","",52,[[["self"]],["result"]]],[11,"get_type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[["self"]],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,N],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"try_into","","",53,[[["self"]],["result"]]],[11,"get_type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[["self"]],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,N],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"try_into","","",54,[[["self"]],["result"]]],[11,"get_type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[["self"]],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,N],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"try_into","","",55,[[["self"]],["result"]]],[11,"get_type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[["self"]],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,N],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"try_into","","",34,[[["self"]],["result"]]],[11,"get_type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[["self"]],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,N],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"try_into","","",35,[[["self"]],["result"]]],[11,"get_type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,N],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,N],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,N],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,N],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,N],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,N],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,N],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,N],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,N],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,N],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,N],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,N],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,N],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,N],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,N],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,N],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,N],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,N],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,N],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["utimbuf"]]],[11,"clone","","",1,[[["self"]],["timeval"]]],[11,"clone","","",2,[[["self"]],["timespec"]]],[11,"clone","","",3,[[["self"]],["rlimit"]]],[11,"clone","","",4,[[["self"]],["rusage"]]],[11,"clone","","",5,[[["self"]],["in_addr"]]],[11,"clone","","",6,[[["self"]],["in6_addr"]]],[11,"clone","","",7,[[["self"]],["ip_mreq"]]],[11,"clone","","",8,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",9,[[["self"]],["hostent"]]],[11,"clone","","",10,[[["self"]],["iovec"]]],[11,"clone","","",11,[[["self"]],["pollfd"]]],[11,"clone","","",12,[[["self"]],["winsize"]]],[11,"clone","","",13,[[["self"]],["sockaddr"]]],[11,"clone","","",14,[[["self"]],["sockaddr_in"]]],[11,"clone","","",15,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",16,[[["self"]],["sockaddr_un"]]],[11,"clone","","",17,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",18,[[["self"]],["addrinfo"]]],[11,"clone","","",19,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",20,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",51,[[["self"]],["fd_set"]]],[11,"clone","","",21,[[["self"]],["tm"]]],[11,"clone","","",22,[[["self"]],["sched_param"]]],[11,"clone","","",23,[[["self"]],["dl_info"]]],[11,"clone","","",24,[[["self"]],["epoll_event"]]],[11,"clone","","",25,[[["self"]],["utsname"]]],[11,"clone","","",26,[[["self"]],["lconv"]]],[11,"clone","","",27,[[["self"]],["dirent"]]],[11,"clone","","",28,[[["self"]],["dirent64"]]],[11,"clone","","",29,[[["self"]],["rlimit64"]]],[11,"clone","","",30,[[["self"]],["glob_t"]]],[11,"clone","","",31,[[["self"]],["ifaddrs"]]],[11,"clone","","",52,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",53,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",54,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",55,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",32,[[["self"]],["passwd"]]],[11,"clone","","",33,[[["self"]],["statvfs"]]],[11,"clone","","",34,[[["self"]],["dqblk"]]],[11,"clone","","",35,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",56,[[["self"]],["fsid_t"]]],[11,"clone","","",36,[[["self"]],["mq_attr"]]],[11,"clone","","",57,[[["self"]],["cpu_set_t"]]],[11,"clone","","",37,[[["self"]],["sigaction"]]],[11,"clone","","",38,[[["self"]],["stack_t"]]],[11,"clone","","",39,[[["self"]],["siginfo_t"]]],[11,"clone","","",40,[[["self"]],["glob64_t"]]],[11,"clone","","",41,[[["self"]],["ucred"]]],[11,"clone","","",42,[[["self"]],["statfs"]]],[11,"clone","","",43,[[["self"]],["msghdr"]]],[11,"clone","","",44,[[["self"]],["termios"]]],[11,"clone","","",45,[[["self"]],["flock"]]],[11,"clone","","",46,[[["self"]],["ipc_perm"]]],[11,"clone","","",47,[[["self"]],["shmid_ds"]]],[11,"clone","","",58,[[["self"]],["sigset_t"]]],[11,"clone","","",48,[[["self"]],["stat"]]],[11,"clone","","",49,[[["self"]],["stat64"]]],[11,"clone","","",59,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",60,[[["self"]],["mcontext_t"]]],[11,"clone","","",50,[[["self"]],["ucontext_t"]]]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"stat"],[3,"stat64"],[3,"ucontext_t"],[3,"fd_set"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"sigset_t"],[3,"pthread_attr_t"],[3,"mcontext_t"],[4,"c_void"],[4,"FILE"],[4,"fpos_t"],[4,"DIR"],[4,"locale_t"],[4,"timezone"],[4,"fpos64_t"]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The \"payload\" of a log message.",N,N],[3,"LogMetadata","","Metadata about a log message.",N,N],[3,"LogLocation","","The location of a log message.",N,N],[3,"MaxLogLevelFilter","","A token providing read and write access to the global…",N,N],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has…",N,N],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if…",N,N],[4,"LogLevel","","An enum representing the available verbosity levels of the…",N,N],[13,"Error","","The \"error\" level.",0,N],[13,"Warn","","The \"warn\" level.",0,N],[13,"Info","","The \"info\" level.",0,N],[13,"Debug","","The \"debug\" level.",0,N],[13,"Trace","","The \"trace\" level.",0,N],[4,"LogLevelFilter","","An enum representing the available verbosity level filters…",N,N],[13,"Off","","A level lower than all log levels.",1,N],[13,"Error","","Corresponds to the `Error` log level.",1,N],[13,"Warn","","Corresponds to the `Warn` log level.",1,N],[13,"Info","","Corresponds to the `Info` log level.",1,N],[13,"Debug","","Corresponds to the `Debug` log level.",1,N],[13,"Trace","","Corresponds to the `Trace` log level.",1,N],[5,"max_log_level","","Returns the current maximum log level.",N,[[],["loglevelfilter"]]],[5,"set_logger","","Sets the global logger.",N,[[["m"]],["result",["setloggererror"]]]],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",N,[[["m"]],["result",["setloggererror"]]]],[5,"shutdown_logger","","Shuts down the global logger.",N,[[],["result",["box","shutdownloggererror"]]]],[5,"shutdown_logger_raw","","Shuts down the global logger.",N,[[],["result",["shutdownloggererror"]]]],[8,"Log","","A trait encapsulating the operations required of a logger",N,N],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["logmetadata"]],["bool"]]],[10,"log","","Logs the `LogRecord`.",2,[[["self"],["logrecord"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["loglevel"]]],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,[[["self"]],["loglevelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["loglevelfilter"]]],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,[[["self"]],["option",["loglevel"]]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["logmetadata"]]],[11,"location","","The location of the log directive.",3,[[["self"]],["loglocation"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["loglevel"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"level","","The verbosity level of the message.",4,[[["self"]],["loglevel"]]],[11,"target","","The name of the target of the directive.",4,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",5,[[["self"]],["str"]]],[11,"file","","The source file containing the message.",5,[[["self"]],["str"]]],[11,"line","","The line containing the message.",5,[[["self"]],["u32"]]],[11,"get","","Gets the current maximum log level filter.",6,[[["self"]],["loglevelfilter"]]],[11,"set","","Sets the maximum log level.",6,[[["self"],["loglevelfilter"]]]],[14,"log","","The standard logging macro.",N,N],[14,"error","","Logs a message at the error level.",N,N],[14,"warn","","Logs a message at the warn level.",N,N],[14,"info","","Logs a message at the info level.",N,N],[14,"debug","","Logs a message at the debug level.",N,N],[14,"trace","","Logs a message at the trace level.",N,N],[14,"log_enabled","","Determines if a message logged at the specified level in…",N,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"partial_cmp","","",0,[[["self"],["loglevel"]],["option",["ordering"]]]],[11,"partial_cmp","","",0,[[["self"],["loglevelfilter"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["loglevelfilter"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["loglevel"]],["option",["ordering"]]]],[11,"eq","","",0,[[["self"],["loglevel"]],["bool"]]],[11,"eq","","",0,[[["self"],["loglevelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["loglevelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["loglevel"]],["bool"]]],[11,"clone","","",0,[[["self"]],["loglevel"]]],[11,"clone","","",1,[[["self"]],["loglevelfilter"]]],[11,"clone","","",5,[[["self"]],["loglocation"]]],[11,"cmp","","",0,[[["self"],["loglevel"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["loglevelfilter"]],["ordering"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result",["loglevel"]]]],[11,"from_str","","",1,[[["str"]],["result",["loglevelfilter"]]]],[11,"description","","",7,[[["self"]],["str"]]],[11,"description","","",8,[[["self"]],["str"]]]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["num"]={"doc":"A collection of numeric types and traits for Rust.","items":[[8,"Integer","num","",N,N],[10,"div_floor","","Floored integer division.",0,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",0,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",0,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",0,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",0,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",0,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",0,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",0,N],[5,"range","","Returns an iterator over the given range [start, stop)…",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[8,"Num","","The base trait for numeric types",N,N],[16,"FromStrRadixErr","","",1,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",1,[[["str"],["u32"]],["result"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,[[],["self"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs","","Computes the absolute value.",4,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",4,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",4,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",4,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",4,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[8,"Bounded","","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",5,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",5,[[],["self"]]],[8,"Saturating","","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",6,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",6,[[["self"],["self"]],["self"]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping…",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",7,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",8,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",9,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",10,[[["self"],["self"]],["option"]]],[8,"PrimInt","","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of…",11,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",11,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",11,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",11,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",11,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",11,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",11,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",11,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",11,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",11,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",11,[[["self"],["u32"]],["self"]]],[8,"Float","","",N,N],[10,"nan","","Returns the `NaN` value.",12,[[],["self"]]],[10,"infinity","","Returns the infinite value.",12,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",12,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",12,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",12,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",12,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",12,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",12,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",12,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",12,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",12,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",12,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",12,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",12,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",12,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",12,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",12,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",12,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",12,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",12,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",12,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",12,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",12,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",12,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",12,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",12,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",12,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",12,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",12,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",12,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",12,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",12,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",12,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",12,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",12,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",12,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",12,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",12,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",12,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",12,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",12,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",12,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",12,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",12,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",12,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",12,N],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",14,[[["i64"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",14,[[["u64"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",14,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",15,[[["t"]],["option"]]],[0,"cast","","",N,N],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,[[["self"]],["option",["i64"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,[[["self"]],["option",["u64"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",14,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",14,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",14,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",14,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",14,[[["i64"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",14,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",14,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",14,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",14,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",14,[[["u64"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",14,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",14,[[["f64"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",15,[[["t"]],["option"]]],[5,"cast","num","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[5,"pow","","Raises a value to the power of exp, using exponentiation…",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an…",N,[[["t"],["usize"]],["option"]]]],"paths":[[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"]]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","items":[[5,"div_rem","num_integer","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number…",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number…",N,[[["t"],["t"]],["t"]]],[8,"Integer","","",N,N],[10,"div_floor","","Floored integer division.",0,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",0,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",0,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",0,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",0,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",0,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus.…",0,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns…",0,N]],"paths":[[8,"Integer"]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",N,N],[3,"RangeInclusive","","An iterator over the range [start, stop]",N,N],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It…",N,N],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It…",N,N],[5,"range","","Returns an iterator over the given range [start, stop)…",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`.…",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`.…",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into_iter","","",0,[[["self"]],["i"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into_iter","","",1,[[["self"]],["i"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,N],[11,"next","","",2,[[["self"]],["option"]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"clone","","",0,[[["self"]],["range"]]],[11,"clone","","",1,[[["self"]],["rangeinclusive"]]],[11,"clone","","",2,[[["self"]],["rangestep"]]],[11,"clone","","",3,[[["self"]],["rangestepinclusive"]]]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",N,N],[12,"kind","","",0,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",1,N],[13,"Invalid","","",1,N],[0,"identities","","",N,N],[8,"Zero","num_traits::identities","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,[[],["self"]]],[0,"sign","num_traits","",N,N],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that can…",N,N],[10,"abs","","Computes the absolute value.",4,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",4,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",4,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the…",4,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the…",4,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[0,"ops","num_traits","",N,N],[0,"saturating","num_traits::ops","",N,N],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at…",5,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating…",5,[[["self"],["self"]],["self"]]],[0,"checked","num_traits::ops","",N,N],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping…",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow…",6,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of…",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If…",7,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of…",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or…",8,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking…",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and…",9,[[["self"],["self"]],["option"]]],[0,"bounds","num_traits","",N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",10,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",10,[[],["self"]]],[0,"float","num_traits","",N,N],[8,"Float","num_traits::float","",N,N],[10,"nan","","Returns the `NaN` value.",11,[[],["self"]]],[10,"infinity","","Returns the infinite value.",11,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",11,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",11,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can…",11,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this…",11,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can…",11,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",11,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or…",11,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",11,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,…",11,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only…",11,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",11,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a…",11,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way…",11,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",11,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",11,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns…",11,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",11,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and…",11,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and…",11,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only…",11,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",11,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",11,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",11,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",11,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",11,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",11,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",11,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an…",11,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",11,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",11,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",11,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",11,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",11,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",11,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle…",11,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",11,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",11,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",11,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in…",11,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in…",11,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in…",11,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and…",11,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number,…",11,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if…",11,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than…",11,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",11,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",11,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",11,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",11,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",11,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",11,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as…",11,N],[0,"cast","num_traits","",N,N],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",12,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",12,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",12,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",12,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",12,[[["self"]],["option",["i64"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",12,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",12,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",12,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",12,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",12,[[["self"]],["option",["u64"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",12,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",12,[[["self"]],["option",["f64"]]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this…",13,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type.…",13,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type.…",13,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type.…",13,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type.…",13,[[["i64"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this…",13,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type.…",13,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type.…",13,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type.…",13,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type.…",13,[[["u64"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type.…",13,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type.…",13,[[["f64"]],["option"]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted…",14,[[["t"]],["option"]]],[0,"int","num_traits","",N,N],[8,"PrimInt","num_traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of…",15,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation…",15,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary…",15,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary…",15,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount,…",15,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount,…",15,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount,…",15,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount,…",15,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount,…",15,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount,…",15,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",15,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's…",15,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's…",15,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",15,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's…",15,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by…",15,[[["self"],["u32"]],["self"]]],[8,"Num","num_traits","The base trait for numeric types",N,N],[16,"FromStrRadixErr","","",16,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",16,[[["str"],["u32"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"Bounded"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",N,N],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii…",N,N],[3,"XorShiftRng","","An Xorshift[1] random number generator.",N,N],[3,"Open01","","A wrapper for generating floating point numbers uniformly…",N,N],[12,"0","","",0,N],[3,"Closed01","","A wrapper for generating floating point numbers uniformly…",N,N],[12,"0","","",1,N],[3,"StdRng","","The standard RNG. This is designed to be efficient on the…",N,N],[3,"ThreadRng","","The thread-local RNG.",N,N],[5,"weak_rng","","Create a weak random number generator with a default…",N,[[],["xorshiftrng"]]],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number…",N,[[],["threadrng"]]],[5,"random","","Generates a random value using the thread-local random…",N,[[],["t"]]],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",N,[[["r"],["i"],["usize"]],["vec"]]],[0,"distributions","","Sampling from random distributions.",N,N],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via…",N,N],[3,"Weighted","","A value with a particular weight for use with…",N,N],[12,"weight","","The numerical weight of this item",2,N],[12,"item","","The actual item which is being weighted",2,N],[3,"WeightedChoice","","A distribution that selects from a finite collection of…",N,N],[0,"range","","Generating numbers between two others.",N,N],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",N,N],[8,"SampleRange","","The helper trait for types that have a sensible way to…",N,N],[10,"construct_range","","Construct the `Range` object that `sample_range` requires.…",3,[[["self"],["self"]],["range"]]],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng`…",3,[[["range"],["r"]],["self"]]],[11,"new","","Create a new `Range` instance that samples uniformly from…",4,[[["x"],["x"]],["range"]]],[0,"gamma","rand::distributions","The Gamma and derived distributions.",N,N],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the…",N,N],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the…",N,N],[11,"new","","Construct an object representing the `Gamma(shape, scale)`…",5,[[["f64"],["f64"]],["gamma"]]],[11,"new","","Create a new chi-squared distribution with…",6,[[["f64"]],["chisquared"]]],[11,"new","","Create a new `FisherF` distribution, with the given…",7,[[["f64"],["f64"]],["fisherf"]]],[11,"new","","Create a new Student t distribution with `n` degrees of…",8,[[["f64"]],["studentt"]]],[0,"normal","rand::distributions","The normal and derived distributions.",N,N],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random…",N,N],[12,"0","","",9,N],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[11,"new","","Construct a new `Normal` distribution with the given mean…",10,[[["f64"],["f64"]],["normal"]]],[11,"new","","Construct a new `LogNormal` distribution with the given…",11,[[["f64"],["f64"]],["lognormal"]]],[0,"exponential","rand::distributions","The exponential distribution.",N,N],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",N,N],[12,"0","","",12,N],[3,"Exp","","The exponential distribution `Exp(lambda)`.",N,N],[11,"new","","Construct a new `Exp` with the given shape parameter…",13,[[["f64"]],["exp"]]],[8,"Sample","rand::distributions","Types that can be used to create a random instance of…",N,N],[10,"sample","","Generate a random value of `Support`, using `rng` as the…",14,[[["self"],["r"]],["support"]]],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",N,N],[10,"ind_sample","","Generate a random value.",15,[[["self"],["r"]],["support"]]],[11,"new","","",16,[[],["randsample"]]],[11,"new","","Create a new `WeightedChoice`.",17,N],[0,"isaac","rand","The ISAAC random number generator.",N,N],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",N,N],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the…",N,N],[11,"new_unseeded","","Create an ISAAC random number generator using the default…",18,[[],["isaacrng"]]],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the…",19,[[],["isaac64rng"]]],[0,"chacha","rand","The ChaCha random number generator.",N,N],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm…",N,N],[11,"new_unseeded","","Create an ChaCha random number generator using the default…",20,[[],["chacharng"]]],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to a…",20,[[["self"],["u64"],["u64"]]]],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it…",N,N],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG…",N,N],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,N],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by…",N,N],[8,"Reseeder","","Something that can be used to reseed an RNG via…",N,N],[10,"reseed","","Reseed the given RNG.",22,[[["self"],["r"]]]],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,[[["r"],["u64"],["rsdr"]],["reseedingrng"]]],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have…",21,[[["self"]]]],[0,"os","rand","Interfaces to the operating system provided random number…",N,N],[3,"OsRng","rand::os","A random number generator that retrieves randomness…",N,N],[11,"new","","Create a new `OsRng`.",23,[[],["result",["osrng"]]]],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",N,N],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`.…",N,N],[11,"new","","Create a new `ReadRng` from a `Read`.",24,[[["r"]],["readrng"]]],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",N,N],[10,"rand","","Generates a random instance of this type using the…",25,[[["r"]],["self"]]],[8,"Rng","","A random number generator.",N,N],[10,"next_u32","","Return the next random u32.",26,[[["self"]],["u32"]]],[11,"next_u64","","Return the next random u64.",26,[[["self"]],["u64"]]],[11,"next_f32","","Return the next random f32 selected from the half-open…",26,[[["self"]],["f32"]]],[11,"next_f64","","Return the next random f64 selected from the half-open…",26,[[["self"]],["f64"]]],[11,"fill_bytes","","Fill `dest` with random data.",26,N],[11,"gen","","Return a random value of a `Rand` type.",26,[[["self"]],["t"]]],[11,"gen_iter","","Return an iterator that will yield an infinite number of…",26,[[["self"]],["generator"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",26,[[["self"],["t"],["t"]],["t"]]],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",26,[[["self"],["u32"]],["bool"]]],[11,"gen_ascii_chars","","Return an iterator of random characters from the set…",26,[[["self"]],["asciigenerator"]]],[11,"choose","","Return a random element from `values`.",26,N],[11,"shuffle","","Shuffle a mutable slice in place.",26,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded to…",N,N],[10,"reseed","","Reseed an RNG with the given seed.",27,[[["self"],["seed"]]]],[10,"from_seed","","Create a new RNG with the given seed.",27,[[["seed"]],["self"]]],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",28,[[],["xorshiftrng"]]],[11,"new","","Create a randomly seeded instance of `StdRng`.",29,[[],["result",["stdrng"]]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into_iter","","",30,[[["self"]],["i"]]],[11,"into","","",30,[[["self"]],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"try_into","","",30,[[["self"]],["result"]]],[11,"get_type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into_iter","","",31,[[["self"]],["i"]]],[11,"into","","",31,[[["self"]],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"try_into","","",31,[[["self"]],["result"]]],[11,"get_type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[["self"]],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,N],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"try_into","","",28,[[["self"]],["result"]]],[11,"get_type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[["self"]],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,N],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"try_into","","",29,[[["self"]],["result"]]],[11,"get_type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[["self"]],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,N],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"try_into","","",32,[[["self"]],["result"]]],[11,"get_type_id","","",32,[[["self"]],["typeid"]]],[11,"from","rand::distributions","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,N],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","rand::distributions::range","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","rand::distributions::gamma","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","rand::distributions::normal","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,N],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,N],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","rand::distributions::exponential","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","rand::isaac","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,N],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","rand::chacha","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","rand::reseeding","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[["self"]],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,N],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"try_into","","",33,[[["self"]],["result"]]],[11,"get_type_id","","",33,[[["self"]],["typeid"]]],[11,"from","rand::os","",23,[[["t"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"from","rand::read","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"sample","rand::distributions::range","",4,[[["self"],["r"]],["sup"]]],[11,"sample","rand::distributions::gamma","",5,[[["self"],["r"]],["f64"]]],[11,"sample","","",6,[[["self"],["r"]],["f64"]]],[11,"sample","","",7,[[["self"],["r"]],["f64"]]],[11,"sample","","",8,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::normal","",10,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions::exponential","",13,[[["self"],["r"]],["f64"]]],[11,"sample","rand::distributions","",16,[[["self"],["r"]],["sup"]]],[11,"sample","","",17,[[["self"],["r"]],["t"]]],[11,"ind_sample","rand::distributions::range","",4,[[["self"],["r"]],["sup"]]],[11,"ind_sample","rand::distributions::gamma","",5,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",6,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",7,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",8,[[["self"],["r"]],["f64"]]],[11,"ind_sample","rand::distributions::normal","",10,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",11,[[["self"],["r"]],["f64"]]],[11,"ind_sample","rand::distributions::exponential","",13,[[["self"],["r"]],["f64"]]],[11,"ind_sample","rand::distributions","",16,[[["self"],["r"]],["sup"]]],[11,"ind_sample","","",17,[[["self"],["r"]],["t"]]],[11,"reseed","rand::reseeding","",33,[[["self"],["r"]]]],[11,"rand","rand::distributions::normal","",9,[[["r"]],["standardnormal"]]],[11,"rand","rand::distributions::exponential","",12,[[["r"]],["exp1"]]],[11,"rand","rand::isaac","",18,[[["r"]],["isaacrng"]]],[11,"rand","","",19,[[["r"]],["isaac64rng"]]],[11,"rand","rand::chacha","",20,[[["r"]],["chacharng"]]],[11,"rand","rand","",0,[[["r"]],["open01",["f64"]]]],[11,"rand","","",1,[[["r"]],["closed01",["f64"]]]],[11,"rand","","",0,[[["r"]],["open01",["f32"]]]],[11,"rand","","",1,[[["r"]],["closed01",["f32"]]]],[11,"rand","","",28,[[["r"]],["xorshiftrng"]]],[11,"next_u32","rand::isaac","",18,[[["self"]],["u32"]]],[11,"next_u32","","",19,[[["self"]],["u32"]]],[11,"next_u64","","",19,[[["self"]],["u64"]]],[11,"next_u32","rand::chacha","",20,[[["self"]],["u32"]]],[11,"next_u32","rand::reseeding","",21,[[["self"]],["u32"]]],[11,"next_u64","","",21,[[["self"]],["u64"]]],[11,"fill_bytes","","",21,N],[11,"next_u32","rand::os","",23,[[["self"]],["u32"]]],[11,"next_u64","","",23,[[["self"]],["u64"]]],[11,"fill_bytes","","",23,N],[11,"next_u32","rand::read","",24,[[["self"]],["u32"]]],[11,"next_u64","","",24,[[["self"]],["u64"]]],[11,"fill_bytes","","",24,N],[11,"next_u32","rand","",28,[[["self"]],["u32"]]],[11,"next_u32","","",29,[[["self"]],["u32"]]],[11,"next_u64","","",29,[[["self"]],["u64"]]],[11,"next_u32","","",32,[[["self"]],["u32"]]],[11,"next_u64","","",32,[[["self"]],["u64"]]],[11,"fill_bytes","","",32,N],[11,"reseed","rand::isaac","",18,N],[11,"from_seed","","Create an ISAAC random number generator with a seed. This…",18,N],[11,"reseed","","",19,N],[11,"from_seed","","Create an ISAAC random number generator with a seed. This…",19,N],[11,"reseed","rand::chacha","",20,N],[11,"from_seed","","Create a ChaCha generator from a seed, obtained from a…",20,N],[11,"reseed","rand::reseeding","",21,N],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and…",21,N],[11,"reseed","rand","Reseed an XorShiftRng. This will panic if `seed` is…",28,N],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is…",28,N],[11,"reseed","","",29,N],[11,"from_seed","","",29,N],[11,"next","","",30,[[["self"]],["option"]]],[11,"next","","",31,[[["self"]],["option",["char"]]]],[11,"default","rand::reseeding","",33,[[],["reseedwithdefault"]]],[11,"clone","rand::distributions::range","",4,[[["self"]],["range"]]],[11,"clone","rand::distributions::gamma","",5,[[["self"]],["gamma"]]],[11,"clone","","",6,[[["self"]],["chisquared"]]],[11,"clone","","",7,[[["self"]],["fisherf"]]],[11,"clone","","",8,[[["self"]],["studentt"]]],[11,"clone","rand::distributions::normal","",9,[[["self"]],["standardnormal"]]],[11,"clone","","",10,[[["self"]],["normal"]]],[11,"clone","","",11,[[["self"]],["lognormal"]]],[11,"clone","rand::distributions::exponential","",12,[[["self"]],["exp1"]]],[11,"clone","","",13,[[["self"]],["exp"]]],[11,"clone","rand::distributions","",16,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["weighted"]]],[11,"clone","rand::isaac","",18,[[["self"]],["isaacrng"]]],[11,"clone","","",19,[[["self"]],["isaac64rng"]]],[11,"clone","rand::chacha","",20,[[["self"]],["chacharng"]]],[11,"clone","rand::reseeding","",33,[[["self"]],["reseedwithdefault"]]],[11,"clone","rand","",28,[[["self"]],["xorshiftrng"]]],[11,"clone","","",29,[[["self"]],["stdrng"]]],[11,"clone","","",32,[[["self"]],["threadrng"]]]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"XorShiftRng"],[3,"StdRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"ThreadRng"],[3,"ReseedWithDefault"]]};
searchIndex["serde"]={"doc":"Serde Serialization Framework","items":[[0,"bytes","serde","Helper module to enable serializing bytes more efficiently",N,N],[3,"Bytes","serde::bytes","`Bytes` wraps a `&[u8]` in order to serialize into a byte…",N,N],[3,"ByteBuf","","`ByteBuf` wraps a `Vec<u8>` and serializes as a byte array.",N,N],[3,"ByteBufVisitor","","This type implements the `serde::de::Visitor` trait for a…",N,N],[11,"new","","Construct a new, empty `ByteBuf`.",0,[[],["self"]]],[11,"with_capacity","","Construct a new, empty `ByteBuf` with the specified…",0,[[["usize"]],["self"]]],[0,"de","serde","Generic deserialization framework.",N,N],[4,"Type","serde::de","`Type` represents all the primitive types that can be…",N,N],[13,"Bool","","Represents a `bool` type.",1,N],[13,"Usize","","Represents a `usize` type.",1,N],[13,"U8","","Represents a `u8` type.",1,N],[13,"U16","","Represents a `u16` type.",1,N],[13,"U32","","Represents a `u32` type.",1,N],[13,"U64","","Represents a `u64` type.",1,N],[13,"Isize","","Represents a `isize` type.",1,N],[13,"I8","","Represents a `i8` type.",1,N],[13,"I16","","Represents a `i16` type.",1,N],[13,"I32","","Represents a `i32` type.",1,N],[13,"I64","","Represents a `i64` type.",1,N],[13,"F32","","Represents a `f32` type.",1,N],[13,"F64","","Represents a `f64` type.",1,N],[13,"Char","","Represents a `char` type.",1,N],[13,"Str","","Represents a `&str` type.",1,N],[13,"String","","Represents a `String` type.",1,N],[13,"Unit","","Represents a `()` type.",1,N],[13,"Option","","Represents an `Option<T>` type.",1,N],[13,"Seq","","Represents a sequence type.",1,N],[13,"Map","","Represents a map type.",1,N],[13,"UnitStruct","","Represents a unit struct type.",1,N],[13,"NewtypeStruct","","Represents a newtype type.",1,N],[13,"TupleStruct","","Represents a tuple struct type.",1,N],[13,"Struct","","Represents a struct type.",1,N],[13,"FieldName","","Represents a struct field name.",1,N],[13,"Tuple","","Represents a tuple type.",1,N],[13,"Enum","","Represents an `enum` type.",1,N],[13,"VariantName","","Represents an enum variant name.",1,N],[13,"StructVariant","","Represents a struct variant.",1,N],[13,"TupleVariant","","Represents a tuple variant.",1,N],[13,"UnitVariant","","Represents a unit variant.",1,N],[13,"Bytes","","Represents a `&[u8]` type.",1,N],[0,"impls","","This module contains `Deserialize` and `Visitor`…",N,N],[3,"UnitVisitor","serde::de::impls","A visitor that produces a `()`.",N,N],[3,"BoolVisitor","","A visitor that produces a `bool`.",N,N],[3,"PhantomDataVisitor","","A visitor that produces a `PhantomData`.",N,N],[3,"BinaryHeapVisitor","","A visitor that produces a sequence.",N,N],[3,"BTreeSetVisitor","","A visitor that produces a sequence.",N,N],[3,"LinkedListVisitor","","A visitor that produces a sequence.",N,N],[3,"HashSetVisitor","","A visitor that produces a sequence.",N,N],[3,"VecVisitor","","A visitor that produces a sequence.",N,N],[3,"VecDequeVisitor","","A visitor that produces a sequence.",N,N],[3,"TupleVisitor1","","Construct a tuple visitor.",N,N],[3,"TupleVisitor2","","Construct a tuple visitor.",N,N],[3,"TupleVisitor3","","Construct a tuple visitor.",N,N],[3,"TupleVisitor4","","Construct a tuple visitor.",N,N],[3,"TupleVisitor5","","Construct a tuple visitor.",N,N],[3,"TupleVisitor6","","Construct a tuple visitor.",N,N],[3,"TupleVisitor7","","Construct a tuple visitor.",N,N],[3,"TupleVisitor8","","Construct a tuple visitor.",N,N],[3,"TupleVisitor9","","Construct a tuple visitor.",N,N],[3,"TupleVisitor10","","Construct a tuple visitor.",N,N],[3,"TupleVisitor11","","Construct a tuple visitor.",N,N],[3,"TupleVisitor12","","Construct a tuple visitor.",N,N],[3,"BTreeMapVisitor","","A visitor that produces a map.",N,N],[3,"HashMapVisitor","","A visitor that produces a map.",N,N],[3,"IgnoredAny","","A target for deserializers that want to ignore data.…",N,N],[11,"new","","Construct a new sequence visitor.",2,[[],["self"]]],[11,"new","","Construct a new sequence visitor.",3,[[],["self"]]],[11,"new","","Construct a new sequence visitor.",4,[[],["self"]]],[11,"new","","Construct a new sequence visitor.",5,[[],["self"]]],[11,"new","","Construct a new sequence visitor.",6,[[],["self"]]],[11,"new","","Construct a new sequence visitor.",7,[[],["self"]]],[11,"new","","Construct a `TupleVisitor*<T>`.",8,[[],["self"]]],[11,"new","","Construct a `TupleVisitor*<T>`.",9,[[],["self"]]],[11,"new","","Construct a `TupleVisitor*<T>`.",10,[[],["self"]]],[11,"new","","Construct a `TupleVisitor*<T>`.",11,[[],["self"]]],[11,"new","","Construct a `TupleVisitor*<T>`.",12,[[],["self"]]],[11,"new","","Construct a `TupleVisitor*<T>`.",13,[[],["self"]]],[11,"new","","Construct a `TupleVisitor*<T>`.",14,[[],["self"]]],[11,"new","","Construct a `TupleVisitor*<T>`.",15,[[],["self"]]],[11,"new","","Construct a `TupleVisitor*<T>`.",16,[[],["self"]]],[11,"new","","Construct a `TupleVisitor*<T>`.",17,[[],["self"]]],[11,"new","","Construct a `TupleVisitor*<T>`.",18,[[],["self"]]],[11,"new","","Construct a `TupleVisitor*<T>`.",19,[[],["self"]]],[11,"new","","Construct a `MapVisitor*<T>`.",20,[[],["self"]]],[11,"new","","Construct a `MapVisitor*<T>`.",21,[[],["self"]]],[0,"value","serde::de","This module supports deserializing from primitives with…",N,N],[3,"UnitDeserializer","serde::de::value","A helper deserializer that deserializes a `()`.",N,N],[3,"BoolDeserializer","","A helper deserializer that deserializes a number.",N,N],[3,"I8Deserializer","","A helper deserializer that deserializes a number.",N,N],[3,"I16Deserializer","","A helper deserializer that deserializes a number.",N,N],[3,"I32Deserializer","","A helper deserializer that deserializes a number.",N,N],[3,"I64Deserializer","","A helper deserializer that deserializes a number.",N,N],[3,"IsizeDeserializer","","A helper deserializer that deserializes a number.",N,N],[3,"U8Deserializer","","A helper deserializer that deserializes a number.",N,N],[3,"U16Deserializer","","A helper deserializer that deserializes a number.",N,N],[3,"U32Deserializer","","A helper deserializer that deserializes a number.",N,N],[3,"U64Deserializer","","A helper deserializer that deserializes a number.",N,N],[3,"UsizeDeserializer","","A helper deserializer that deserializes a number.",N,N],[3,"F32Deserializer","","A helper deserializer that deserializes a number.",N,N],[3,"F64Deserializer","","A helper deserializer that deserializes a number.",N,N],[3,"CharDeserializer","","A helper deserializer that deserializes a number.",N,N],[3,"StrDeserializer","","A helper deserializer that deserializes a `&str`.",N,N],[3,"StringDeserializer","","A helper deserializer that deserializes a `String`.",N,N],[3,"SeqDeserializer","","A helper deserializer that deserializes a sequence.",N,N],[3,"SeqVisitorDeserializer","","A helper deserializer that deserializes a sequence using a…",N,N],[3,"MapDeserializer","","A helper deserializer that deserializes a map.",N,N],[3,"MapVisitorDeserializer","","A helper deserializer that deserializes a map using a…",N,N],[3,"BytesDeserializer","","A helper deserializer that deserializes a `&[u8]`.",N,N],[3,"ByteBufDeserializer","","A helper deserializer that deserializes a `Vec<u8>`.",N,N],[4,"Error","","This represents all the possible errors that can occur…",N,N],[13,"Custom","","The value had some custom error.",22,N],[13,"InvalidType","","The value had an incorrect type.",22,N],[13,"InvalidLength","","The value had an invalid length.",22,N],[13,"InvalidValue","","The value is invalid and cannot be deserialized.",22,N],[13,"EndOfStream","","EOF while deserializing a value.",22,N],[13,"UnknownVariant","","Unknown variant in enum.",22,N],[13,"UnknownField","","Unknown field in struct.",22,N],[13,"MissingField","","Struct is missing a field.",22,N],[8,"ValueDeserializer","","This trait converts primitive types into a deserializer.",N,N],[16,"Deserializer","","The actual deserializer type.",23,N],[10,"into_deserializer","","Convert this value into a deserializer.",23,N],[11,"new","","Construct a new `SeqDeserializer<I>`.",24,[[["i"],["usize"]],["self"]]],[11,"new","","Construct a new `SeqVisitorDeserializer<V_, E>`.",25,[[["v_"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, K, V>`.",26,[[["i"],["usize"]],["self"]]],[11,"new","","Construct a new `MapVisitorDeserializer<V_, E>`.",27,[[["v_"]],["self"]]],[8,"Error","serde::de","`Error` is a trait that allows a `Deserialize` to…",N,N],[10,"custom","","Raised when there is general error when deserializing a…",28,[[["t"]],["self"]]],[10,"end_of_stream","","Raised when a `Deserialize` type unexpectedly hit the end…",28,[[],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` was passed an incorrect type.",28,[[["type"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` was passed an incorrect value.",28,[[["str"]],["self"]]],[11,"invalid_length","","Raised when a fixed sized sequence or map was passed in…",28,[[["usize"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received an…",28,[[["str"]],["self"]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received an…",28,[[["str"]],["self"]]],[11,"missing_field","","raised when a `deserialize` struct type did not receive a…",28,[[["str"]],["self"]]],[8,"Deserialize","","`Deserialize` represents a type that can be deserialized.",N,N],[10,"deserialize","","Deserialize this value given this `Deserializer`.",29,[[["d"]],["result"]]],[8,"Deserializer","","`Deserializer` is a trait that can deserialize values by…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",30,N],[10,"deserialize","","This method walks a visitor through a value as it is being…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_usize","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_isize","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_fixed_size_array","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_bytes","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_map","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_struct","","This method hints that the `Deserialize` type is expecting…",30,N],[11,"deserialize_struct_field","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","This method hints that the `Deserialize` type is expecting…",30,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_enum","","This method hints that the `Deserialize` type is expecting…",30,N],[11,"deserialize_ignored_any","","This method hints that the `Deserialize` type needs to…",30,[[["self"],["v"]],["result"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",N,N],[16,"Value","","The value produced by this visitor.",31,N],[11,"visit_bool","","`visit_bool` deserializes a `bool` into a `Value`.",31,[[["self"],["bool"]],["result"]]],[11,"visit_isize","","`visit_isize` deserializes a `isize` into a `Value`.",31,[[["self"],["isize"]],["result"]]],[11,"visit_i8","","`visit_i8` deserializes a `i8` into a `Value`.",31,[[["self"],["i8"]],["result"]]],[11,"visit_i16","","`visit_i16` deserializes a `i16` into a `Value`.",31,[[["self"],["i16"]],["result"]]],[11,"visit_i32","","`visit_i32` deserializes a `i32` into a `Value`.",31,[[["self"],["i32"]],["result"]]],[11,"visit_i64","","`visit_i64` deserializes a `i64` into a `Value`.",31,[[["self"],["i64"]],["result"]]],[11,"visit_usize","","`visit_usize` deserializes a `usize` into a `Value`.",31,[[["self"],["usize"]],["result"]]],[11,"visit_u8","","`visit_u8` deserializes a `u8` into a `Value`.",31,[[["self"],["u8"]],["result"]]],[11,"visit_u16","","`visit_u16` deserializes a `u16` into a `Value`.",31,[[["self"],["u16"]],["result"]]],[11,"visit_u32","","`visit_u32` deserializes a `u32` into a `Value`.",31,[[["self"],["u32"]],["result"]]],[11,"visit_u64","","`visit_u64` deserializes a `u64` into a `Value`.",31,[[["self"],["u64"]],["result"]]],[11,"visit_f32","","`visit_f32` deserializes a `f32` into a `Value`.",31,[[["self"],["f32"]],["result"]]],[11,"visit_f64","","`visit_f64` deserializes a `f64` into a `Value`.",31,[[["self"],["f64"]],["result"]]],[11,"visit_char","","`visit_char` deserializes a `char` into a `Value`.",31,[[["self"],["char"]],["result"]]],[11,"visit_str","","`visit_str` deserializes a `&str` into a `Value`.",31,[[["self"],["str"]],["result"]]],[11,"visit_string","","`visit_string` deserializes a `String` into a `Value`.…",31,[[["self"],["string"]],["result"]]],[11,"visit_unit","","`visit_unit` deserializes a `()` into a `Value`.",31,[[["self"]],["result"]]],[11,"visit_unit_struct","","`visit_unit_struct` deserializes a unit struct into a…",31,[[["self"],["str"]],["result"]]],[11,"visit_none","","`visit_none` deserializes a none value into a `Value`.",31,[[["self"]],["result"]]],[11,"visit_some","","`visit_some` deserializes a value into a `Value`.",31,[[["self"],["d"]],["result"]]],[11,"visit_newtype_struct","","`visit_newtype_struct` deserializes a value into a `Value`.",31,[[["self"],["d"]],["result"]]],[11,"visit_seq","","`visit_bool` deserializes a `SeqVisitor` into a `Value`.",31,[[["self"],["v"]],["result"]]],[11,"visit_map","","`visit_map` deserializes a `MapVisitor` into a `Value`.",31,[[["self"],["v"]],["result"]]],[11,"visit_bytes","","`visit_bytes` deserializes a `&[u8]` into a `Value`.",31,N],[11,"visit_byte_buf","","`visit_byte_buf` deserializes a `Vec<u8>` into a `Value`.",31,[[["self"],["vec",["u8"]]],["result"]]],[8,"SeqVisitor","","`SeqVisitor` visits each item in a sequence.",N,N],[16,"Error","","The error type that can be returned if some error occurs…",32,N],[10,"visit","","This returns a `Ok(Some(value))` for the next value in the…",32,[[["self"]],["result",["option"]]]],[10,"end","","This signals to the `SeqVisitor` that the `Visitor` does…",32,[[["self"]],["result"]]],[11,"size_hint","","Return the lower and upper bound of items remaining in the…",32,N],[8,"MapVisitor","","`MapVisitor` visits each item in a sequence.",N,N],[16,"Error","","The error type that can be returned if some error occurs…",33,N],[11,"visit","","This returns a `Ok(Some((key, value)))` for the next…",33,[[["self"]],["result",["option"]]]],[10,"visit_key","","This returns a `Ok(Some(key))` for the next key in the…",33,[[["self"]],["result",["option"]]]],[10,"visit_value","","This returns a `Ok(value)` for the next value in the map.",33,[[["self"]],["result"]]],[10,"end","","This signals to the `MapVisitor` that the `Visitor` does…",33,[[["self"]],["result"]]],[11,"size_hint","","Return the lower and upper bound of items remaining in the…",33,N],[11,"missing_field","","Report that the struct has a field that wasn't deserialized",33,[[["self"],["str"]],["result"]]],[8,"EnumVisitor","","`EnumVisitor` is a visitor that is created by the…",N,N],[16,"Value","","The value produced by this visitor.",34,N],[10,"visit","","Visit the specific variant with the `VariantVisitor`.",34,[[["self"],["v"]],["result"]]],[8,"VariantVisitor","","`VariantVisitor` is a visitor that is created by the…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",35,N],[10,"visit_variant","","`visit_variant` is called to identify which variant to…",35,[[["self"]],["result"]]],[11,"visit_unit","","`visit_unit` is called when deserializing a variant with…",35,[[["self"]],["result"]]],[11,"visit_newtype","","`visit_newtype` is called when deserializing a variant…",35,[[["self"]],["result"]]],[11,"visit_tuple","","`visit_tuple` is called when deserializing a tuple-like…",35,[[["self"],["usize"],["v"]],["result"]]],[11,"visit_struct","","`visit_struct` is called when deserializing a struct-like…",35,N],[0,"iter","serde","Module that contains helper iterators.",N,N],[3,"LineColIterator","serde::iter","Iterator over a byte stream that tracks the current…",N,N],[11,"new","","Construct a new `LineColIterator<Iter>`.",36,[[["iter"]],["linecoliterator"]]],[11,"line","","Report the current line inside the iterator.",36,[[["self"]],["usize"]]],[11,"col","","Report the current column inside the iterator.",36,[[["self"]],["usize"]]],[11,"get_ref","","Gets a reference to the underlying iterator.",36,[[["self"]],["iter"]]],[11,"get_mut","","Gets a mutable reference to the underlying iterator.",36,[[["self"]],["iter"]]],[11,"into_inner","","Unwraps this `LineColIterator`, returning the underlying…",36,[[["self"]],["iter"]]],[11,"peek","","peeks at the next value",36,[[["self"]],["option",["result"]]]],[0,"ser","serde","Generic serialization framework.",N,N],[0,"impls","serde::ser","Implementations for all of Rust's builtin types.",N,N],[3,"SeqIteratorVisitor","serde::ser::impls","A `serde::Visitor` for sequence iterators.",N,N],[3,"TupleVisitor1","","A tuple visitor.",N,N],[3,"TupleVisitor2","","A tuple visitor.",N,N],[3,"TupleVisitor3","","A tuple visitor.",N,N],[3,"TupleVisitor4","","A tuple visitor.",N,N],[3,"TupleVisitor5","","A tuple visitor.",N,N],[3,"TupleVisitor6","","A tuple visitor.",N,N],[3,"TupleVisitor7","","A tuple visitor.",N,N],[3,"TupleVisitor8","","A tuple visitor.",N,N],[3,"TupleVisitor9","","A tuple visitor.",N,N],[3,"TupleVisitor10","","A tuple visitor.",N,N],[3,"TupleVisitor11","","A tuple visitor.",N,N],[3,"TupleVisitor12","","A tuple visitor.",N,N],[3,"MapIteratorVisitor","","A `serde::Visitor` for (key, value) map iterators.",N,N],[11,"new","","Construct a new `SeqIteratorVisitor<Iter>`.",37,[[["iter"],["option",["usize"]]],["seqiteratorvisitor"]]],[11,"new","","Construct a new, empty `TupleVisitor`.",38,N],[11,"new","","Construct a new, empty `TupleVisitor`.",39,N],[11,"new","","Construct a new, empty `TupleVisitor`.",40,N],[11,"new","","Construct a new, empty `TupleVisitor`.",41,N],[11,"new","","Construct a new, empty `TupleVisitor`.",42,N],[11,"new","","Construct a new, empty `TupleVisitor`.",43,N],[11,"new","","Construct a new, empty `TupleVisitor`.",44,N],[11,"new","","Construct a new, empty `TupleVisitor`.",45,N],[11,"new","","Construct a new, empty `TupleVisitor`.",46,N],[11,"new","","Construct a new, empty `TupleVisitor`.",47,N],[11,"new","","Construct a new, empty `TupleVisitor`.",48,N],[11,"new","","Construct a new, empty `TupleVisitor`.",49,N],[11,"new","","Construct a new `MapIteratorVisitor<Iter>`.",50,[[["iter"],["option",["usize"]]],["mapiteratorvisitor"]]],[8,"Error","serde::ser","`Error` is a trait that allows a `Serialize` to…",N,N],[10,"custom","","Raised when there is general error when deserializing a…",51,[[["t"]],["self"]]],[11,"invalid_value","","Raised when a `Serialize` was passed an incorrect value.",51,[[["str"]],["self"]]],[8,"Serialize","","A trait that describes a type that can be serialized by a…",N,N],[10,"serialize","","Serializes this value into this serializer.",52,[[["self"],["s"]],["result"]]],[8,"Serializer","","A trait that describes a type that can serialize a stream…",N,N],[16,"Error","","The error type that can be returned if some error occurs…",53,N],[10,"serialize_bool","","Serializes a `bool` value.",53,[[["self"],["bool"]],["result"]]],[11,"serialize_isize","","Serializes a `isize` value. By default it casts the value…",53,[[["self"],["isize"]],["result"]]],[11,"serialize_i8","","Serializes a `i8` value. By default it casts the value to…",53,[[["self"],["i8"]],["result"]]],[11,"serialize_i16","","Serializes a `i16` value. By default it casts the value to…",53,[[["self"],["i16"]],["result"]]],[11,"serialize_i32","","Serializes a `i32` value. By default it casts the value to…",53,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serializes a `i64` value.",53,[[["self"],["i64"]],["result"]]],[11,"serialize_usize","","Serializes a `usize` value. By default it casts the value…",53,[[["self"],["usize"]],["result"]]],[11,"serialize_u8","","Serializes a `u8` value. By default it casts the value to…",53,[[["self"],["u8"]],["result"]]],[11,"serialize_u16","","Serializes a `u32` value. By default it casts the value to…",53,[[["self"],["u16"]],["result"]]],[11,"serialize_u32","","Serializes a `u32` value. By default it casts the value to…",53,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","`Serializes a`u64` value.",53,[[["self"],["u64"]],["result"]]],[11,"serialize_f32","","Serializes a `f32` value. By default it casts the value to…",53,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serializes a `f64` value.",53,[[["self"],["f64"]],["result"]]],[11,"serialize_char","","Serializes a character. By default it serializes it as a…",53,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serializes a `&str`.",53,[[["self"],["str"]],["result"]]],[11,"serialize_bytes","","Enables those serialization formats that support…",53,N],[10,"serialize_unit","","Serializes a `()` value.",53,[[["self"]],["result"]]],[11,"serialize_unit_struct","","Serializes a unit struct value.",53,[[["self"],["str"]],["result"]]],[11,"serialize_unit_variant","","Serializes a unit variant, otherwise known as a variant…",53,[[["self"],["str"],["usize"],["str"]],["result"]]],[11,"serialize_newtype_struct","","Allows a tuple struct with a single element, also known as…",53,[[["self"],["str"],["t"]],["result"]]],[11,"serialize_newtype_variant","","Allows a variant with a single item to be more efficiently…",53,[[["self"],["str"],["usize"],["str"],["t"]],["result"]]],[10,"serialize_none","","Serializes a `None` value..serialize",53,[[["self"]],["result"]]],[10,"serialize_some","","Serializes a `Some(...)` value.",53,[[["self"],["v"]],["result"]]],[10,"serialize_seq","","Serializes a sequence.",53,[[["self"],["v"]],["result"]]],[10,"serialize_seq_elt","","Serializes a sequence element.",53,[[["self"],["t"]],["result"]]],[11,"serialize_tuple","","Serializes a tuple.",53,[[["self"],["v"]],["result"]]],[11,"serialize_tuple_elt","","Serializes a tuple element.",53,[[["self"],["t"]],["result"]]],[11,"serialize_fixed_size_array","","Serializes a fixed-size array.",53,[[["self"],["v"]],["result"]]],[11,"serialize_tuple_struct","","Serializes a tuple struct.",53,[[["self"],["str"],["v"]],["result"]]],[11,"serialize_tuple_struct_elt","","Serializes a tuple struct element.",53,[[["self"],["t"]],["result"]]],[11,"serialize_tuple_variant","","Serializes a tuple variant.",53,[[["self"],["str"],["usize"],["str"],["v"]],["result"]]],[11,"serialize_tuple_variant_elt","","Serializes a tuple element.",53,[[["self"],["t"]],["result"]]],[10,"serialize_map","","Serializes a map.",53,[[["self"],["v"]],["result"]]],[10,"serialize_map_elt","","Serializes a map element (key-value pair).",53,[[["self"],["k"],["v"]],["result"]]],[11,"serialize_struct","","Serializes a struct.",53,[[["self"],["str"],["v"]],["result"]]],[11,"serialize_struct_elt","","Serializes an element of a struct.",53,[[["self"],["str"],["v"]],["result"]]],[11,"serialize_struct_variant","","Serializes a struct variant.",53,[[["self"],["str"],["usize"],["str"],["v"]],["result"]]],[11,"serialize_struct_variant_elt","","Serializes an element of a struct variant.",53,[[["self"],["str"],["v"]],["result"]]],[8,"SeqVisitor","","A trait that is used by a `Serialize` to iterate through a…",N,N],[10,"visit","","Serializes a sequence item in the serializer.",54,[[["self"],["s"]],["result",["option"]]]],[11,"len","","Return the length of the sequence if known.",54,[[["self"]],["option",["usize"]]]],[8,"MapVisitor","","A trait that is used by a `Serialize` to iterate through a…",N,N],[10,"visit","","Serializes a map item in the serializer.",55,[[["self"],["s"]],["result",["option"]]]],[11,"len","","Return the length of the map if known.",55,[[["self"]],["option",["usize"]]]],[11,"from","serde::bytes","",56,[[["t"]],["t"]]],[11,"into","","",56,[[["self"]],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,N],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"try_into","","",56,[[["self"]],["result"]]],[11,"get_type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[["self"]],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"try_into","","",57,[[["self"]],["result"]]],[11,"get_type_id","","",57,[[["self"]],["typeid"]]],[11,"from","serde::de","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","serde::de::impls","",58,[[["t"]],["t"]]],[11,"into","","",58,[[["self"]],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"try_into","","",58,[[["self"]],["result"]]],[11,"get_type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[["self"]],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"try_into","","",59,[[["self"]],["result"]]],[11,"get_type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[["self"]],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"try_into","","",60,[[["self"]],["result"]]],[11,"get_type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[["self"]],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[["self"]],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"try_into","","",61,[[["self"]],["result"]]],[11,"get_type_id","","",61,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",62,[[["t"]],["t"]]],[11,"into","","",62,[[["self"]],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"try_into","","",62,[[["self"]],["result"]]],[11,"get_type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[["self"]],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"try_into","","",63,[[["self"]],["result"]]],[11,"get_type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[["self"]],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"try_into","","",64,[[["self"]],["result"]]],[11,"get_type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[["self"]],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"try_into","","",65,[[["self"]],["result"]]],[11,"get_type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[["self"]],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"try_into","","",66,[[["self"]],["result"]]],[11,"get_type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[["self"]],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"try_into","","",67,[[["self"]],["result"]]],[11,"get_type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[["self"]],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"try_into","","",68,[[["self"]],["result"]]],[11,"get_type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[["self"]],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"try_into","","",69,[[["self"]],["result"]]],[11,"get_type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[["self"]],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"try_into","","",70,[[["self"]],["result"]]],[11,"get_type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[["self"]],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"try_into","","",71,[[["self"]],["result"]]],[11,"get_type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[["self"]],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"try_into","","",72,[[["self"]],["result"]]],[11,"get_type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[["self"]],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"try_into","","",73,[[["self"]],["result"]]],[11,"get_type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[["self"]],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"try_into","","",74,[[["self"]],["result"]]],[11,"get_type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[["self"]],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"try_into","","",75,[[["self"]],["result"]]],[11,"get_type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[["self"]],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"try_into","","",76,[[["self"]],["result"]]],[11,"get_type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[["self"]],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"try_into","","",77,[[["self"]],["result"]]],[11,"get_type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[["self"]],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"try_into","","",78,[[["self"]],["result"]]],[11,"get_type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[["self"]],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"try_into","","",26,[[["self"]],["result"]]],[11,"get_type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[["self"]],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"try_into","","",27,[[["self"]],["result"]]],[11,"get_type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[["self"]],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"try_into","","",79,[[["self"]],["result"]]],[11,"get_type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[["self"]],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"try_into","","",80,[[["self"]],["result"]]],[11,"get_type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,N],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"from","serde::iter","",36,[[["t"]],["t"]]],[11,"into_iter","","",36,[[["self"]],["i"]]],[11,"into","","",36,[[["self"]],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"try_into","","",36,[[["self"]],["result"]]],[11,"get_type_id","","",36,[[["self"]],["typeid"]]],[11,"from","serde::ser::impls","",37,[[["t"]],["t"]]],[11,"into","","",37,[[["self"]],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"try_into","","",37,[[["self"]],["result"]]],[11,"get_type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[["self"]],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"try_into","","",38,[[["self"]],["result"]]],[11,"get_type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[["self"]],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"try_into","","",39,[[["self"]],["result"]]],[11,"get_type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[["self"]],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"try_into","","",40,[[["self"]],["result"]]],[11,"get_type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[["self"]],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"try_into","","",41,[[["self"]],["result"]]],[11,"get_type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[["self"]],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"try_into","","",42,[[["self"]],["result"]]],[11,"get_type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[["self"]],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"try_into","","",43,[[["self"]],["result"]]],[11,"get_type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[["self"]],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"try_into","","",44,[[["self"]],["result"]]],[11,"get_type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[["self"]],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"try_into","","",45,[[["self"]],["result"]]],[11,"get_type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[["self"]],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"try_into","","",46,[[["self"]],["result"]]],[11,"get_type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[["self"]],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"try_into","","",47,[[["self"]],["result"]]],[11,"get_type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[["self"]],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"try_into","","",48,[[["self"]],["result"]]],[11,"get_type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[["self"]],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"try_into","","",49,[[["self"]],["result"]]],[11,"get_type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[["self"]],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"try_into","","",50,[[["self"]],["result"]]],[11,"get_type_id","","",50,[[["self"]],["typeid"]]],[11,"into_deserializer","serde::bytes","",56,[[["self"]],["bytesdeserializer"]]],[11,"into_deserializer","","",0,N],[11,"custom","serde::de::value","",22,[[["t"]],["self"]]],[11,"end_of_stream","","",22,[[],["self"]]],[11,"invalid_type","","",22,[[["type"]],["self"]]],[11,"invalid_value","","",22,[[["str"]],["self"]]],[11,"invalid_length","","",22,[[["usize"]],["self"]]],[11,"unknown_variant","","",22,[[["str"]],["self"]]],[11,"unknown_field","","",22,[[["str"]],["self"]]],[11,"missing_field","","",22,[[["str"]],["self"]]],[11,"deserialize","serde::bytes","",0,[[["d"]],["result",["bytebuf"]]]],[11,"deserialize","serde::de::impls","",61,[[["d"]],["result",["ignoredany"]]]],[11,"deserialize","serde::de::value","",62,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",62,[[["self"],["v"]],["result"]]],[11,"deserialize","","",63,[[["self"],["v"]],["result"]]],[11,"deserialize","","",64,[[["self"],["v"]],["result"]]],[11,"deserialize","","",65,[[["self"],["v"]],["result"]]],[11,"deserialize","","",66,[[["self"],["v"]],["result"]]],[11,"deserialize","","",67,[[["self"],["v"]],["result"]]],[11,"deserialize","","",68,[[["self"],["v"]],["result"]]],[11,"deserialize","","",69,[[["self"],["v"]],["result"]]],[11,"deserialize","","",70,[[["self"],["v"]],["result"]]],[11,"deserialize","","",71,[[["self"],["v"]],["result"]]],[11,"deserialize","","",72,[[["self"],["v"]],["result"]]],[11,"deserialize","","",73,[[["self"],["v"]],["result"]]],[11,"deserialize","","",74,[[["self"],["v"]],["result"]]],[11,"deserialize","","",75,[[["self"],["v"]],["result"]]],[11,"deserialize","","",76,[[["self"],["v"]],["result"]]],[11,"deserialize","","",77,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",77,N],[11,"deserialize","","",78,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",78,N],[11,"deserialize","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize","","",26,[[["self"],["v_"]],["result"]]],[11,"deserialize","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize","","",79,[[["self"],["v"]],["result"]]],[11,"deserialize","","",80,[[["self"],["v"]],["result"]]],[11,"visit_unit","serde::bytes","",57,[[["self"]],["result",["bytebuf"]]]],[11,"visit_seq","","",57,[[["self"],["v"]],["result",["bytebuf"]]]],[11,"visit_bytes","","",57,N],[11,"visit_byte_buf","","",57,[[["self"],["vec",["u8"]]],["result",["bytebuf"]]]],[11,"visit_unit","serde::de::impls","",58,[[["self"]],["result"]]],[11,"visit_seq","","",58,[[["self"],["v"]],["result"]]],[11,"visit_bool","","",59,[[["self"],["bool"]],["result",["bool"]]]],[11,"visit_str","","",59,[[["self"],["str"]],["result",["bool"]]]],[11,"visit_unit","","",60,[[["self"]],["result",["phantomdata"]]]],[11,"visit_unit","","",2,[[["self"]],["result",["binaryheap"]]]],[11,"visit_seq","","",2,[[["self"],["v"]],["result",["binaryheap"]]]],[11,"visit_unit","","",3,[[["self"]],["result",["btreeset"]]]],[11,"visit_seq","","",3,[[["self"],["v"]],["result",["btreeset"]]]],[11,"visit_unit","","",4,[[["self"]],["result",["linkedlist"]]]],[11,"visit_seq","","",4,[[["self"],["v"]],["result",["linkedlist"]]]],[11,"visit_unit","","",5,[[["self"]],["result",["hashset"]]]],[11,"visit_seq","","",5,[[["self"],["v"]],["result",["hashset"]]]],[11,"visit_unit","","",6,[[["self"]],["result",["vec"]]]],[11,"visit_seq","","",6,[[["self"],["v"]],["result",["vec"]]]],[11,"visit_unit","","",7,[[["self"]],["result",["vecdeque"]]]],[11,"visit_seq","","",7,[[["self"],["v"]],["result",["vecdeque"]]]],[11,"visit_seq","","",8,[[["self"],["v"]],["result"]]],[11,"visit_seq","","",9,[[["self"],["v"]],["result"]]],[11,"visit_seq","","",10,[[["self"],["v"]],["result"]]],[11,"visit_seq","","",11,[[["self"],["v"]],["result"]]],[11,"visit_seq","","",12,[[["self"],["v"]],["result"]]],[11,"visit_seq","","",13,[[["self"],["v"]],["result"]]],[11,"visit_seq","","",14,[[["self"],["v"]],["result"]]],[11,"visit_seq","","",15,[[["self"],["v"]],["result"]]],[11,"visit_seq","","",16,[[["self"],["v"]],["result"]]],[11,"visit_seq","","",17,[[["self"],["v"]],["result"]]],[11,"visit_seq","","",18,[[["self"],["v"]],["result"]]],[11,"visit_seq","","",19,[[["self"],["v"]],["result"]]],[11,"visit_unit","","",20,[[["self"]],["result",["btreemap"]]]],[11,"visit_map","","",20,[[["self"],["visitor"]],["result",["btreemap"]]]],[11,"visit_unit","","",21,[[["self"]],["result",["hashmap"]]]],[11,"visit_map","","",21,[[["self"],["visitor"]],["result",["hashmap"]]]],[11,"visit","serde::de::value","",24,[[["self"]],["result",["option"]]]],[11,"end","","",24,[[["self"]],["result"]]],[11,"size_hint","","",24,N],[11,"visit_key","","",26,[[["self"]],["result",["option"]]]],[11,"visit_value","","",26,[[["self"]],["result"]]],[11,"end","","",26,[[["self"]],["result"]]],[11,"size_hint","","",26,N],[11,"visit_variant","","",77,[[["self"]],["result"]]],[11,"visit_unit","","",77,[[["self"]],["result"]]],[11,"visit_variant","","",78,[[["self"]],["result"]]],[11,"visit_unit","","",78,[[["self"]],["result"]]],[11,"serialize","serde::bytes","",56,[[["self"],["s"]],["result"]]],[11,"serialize","","",0,[[["self"],["s"]],["result"]]],[11,"visit","serde::ser::impls","",37,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",37,[[["self"]],["option",["usize"]]]],[11,"visit","","",38,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",38,[[["self"]],["option",["usize"]]]],[11,"visit","","",39,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",39,[[["self"]],["option",["usize"]]]],[11,"visit","","",40,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",40,[[["self"]],["option",["usize"]]]],[11,"visit","","",41,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",41,[[["self"]],["option",["usize"]]]],[11,"visit","","",42,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",42,[[["self"]],["option",["usize"]]]],[11,"visit","","",43,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",43,[[["self"]],["option",["usize"]]]],[11,"visit","","",44,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",44,[[["self"]],["option",["usize"]]]],[11,"visit","","",45,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",45,[[["self"]],["option",["usize"]]]],[11,"visit","","",46,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",46,[[["self"]],["option",["usize"]]]],[11,"visit","","",47,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",47,[[["self"]],["option",["usize"]]]],[11,"visit","","",48,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",48,[[["self"]],["option",["usize"]]]],[11,"visit","","",49,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",49,[[["self"]],["option",["usize"]]]],[11,"visit","","",50,[[["self"],["s"]],["result",["option"]]]],[11,"len","","",50,[[["self"]],["option",["usize"]]]],[11,"from","serde::bytes","",56,N],[11,"from","","",56,[[["vec"]],["self"]]],[11,"from","","",0,[[["vec",["u8"]]],["self"]]],[11,"into","","",56,N],[11,"into","","",0,[[["self"]],["vec",["u8"]]]],[11,"partial_cmp","","",56,[[["self"],["bytes"]],["option",["ordering"]]]],[11,"lt","","",56,[[["self"],["bytes"]],["bool"]]],[11,"le","","",56,[[["self"],["bytes"]],["bool"]]],[11,"gt","","",56,[[["self"],["bytes"]],["bool"]]],[11,"ge","","",56,[[["self"],["bytes"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["bytebuf"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["bytebuf"]],["bool"]]],[11,"le","","",0,[[["self"],["bytebuf"]],["bool"]]],[11,"gt","","",0,[[["self"],["bytebuf"]],["bool"]]],[11,"ge","","",0,[[["self"],["bytebuf"]],["bool"]]],[11,"as_mut","","",0,[[["self"]],["vec"]]],[11,"as_mut","","",0,N],[11,"next","serde::iter","",36,[[["self"]],["option",["result"]]]],[11,"default","serde::bytes","",0,[[],["bytebuf"]]],[11,"eq","","",56,[[["self"],["bytes"]],["bool"]]],[11,"ne","","",56,[[["self"],["bytes"]],["bool"]]],[11,"eq","","",0,[[["self"],["bytebuf"]],["bool"]]],[11,"ne","","",0,[[["self"],["bytebuf"]],["bool"]]],[11,"eq","serde::de::value","",22,[[["self"],["error"]],["bool"]]],[11,"ne","","",22,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",1,[[["self"],["type"]],["bool"]]],[11,"as_ref","serde::bytes","",0,[[["self"]],["vec"]]],[11,"as_ref","","",0,N],[11,"clone","","",56,[[["self"]],["bytes"]]],[11,"clone","","",0,[[["self"]],["bytebuf"]]],[11,"clone","serde::de::value","",22,[[["self"]],["error"]]],[11,"clone","serde::de","",1,[[["self"]],["type"]]],[11,"cmp","serde::bytes","",56,[[["self"],["bytes"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["bytebuf"]],["ordering"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de::value","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de::value","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref_mut","serde::bytes","",0,N],[11,"hash","","",56,N],[11,"hash","","",0,N],[11,"deref","","",56,N],[11,"deref","","",0,N],[11,"description","serde::de::value","",22,[[["self"]],["str"]]],[11,"cause","","",22,[[["self"]],["option",["error"]]]]],"paths":[[3,"ByteBuf"],[4,"Type"],[3,"BinaryHeapVisitor"],[3,"BTreeSetVisitor"],[3,"LinkedListVisitor"],[3,"HashSetVisitor"],[3,"VecVisitor"],[3,"VecDequeVisitor"],[3,"TupleVisitor1"],[3,"TupleVisitor2"],[3,"TupleVisitor3"],[3,"TupleVisitor4"],[3,"TupleVisitor5"],[3,"TupleVisitor6"],[3,"TupleVisitor7"],[3,"TupleVisitor8"],[3,"TupleVisitor9"],[3,"TupleVisitor10"],[3,"TupleVisitor11"],[3,"TupleVisitor12"],[3,"BTreeMapVisitor"],[3,"HashMapVisitor"],[4,"Error"],[8,"ValueDeserializer"],[3,"SeqDeserializer"],[3,"SeqVisitorDeserializer"],[3,"MapDeserializer"],[3,"MapVisitorDeserializer"],[8,"Error"],[8,"Deserialize"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqVisitor"],[8,"MapVisitor"],[8,"EnumVisitor"],[8,"VariantVisitor"],[3,"LineColIterator"],[3,"SeqIteratorVisitor"],[3,"TupleVisitor1"],[3,"TupleVisitor2"],[3,"TupleVisitor3"],[3,"TupleVisitor4"],[3,"TupleVisitor5"],[3,"TupleVisitor6"],[3,"TupleVisitor7"],[3,"TupleVisitor8"],[3,"TupleVisitor9"],[3,"TupleVisitor10"],[3,"TupleVisitor11"],[3,"TupleVisitor12"],[3,"MapIteratorVisitor"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SeqVisitor"],[8,"MapVisitor"],[3,"Bytes"],[3,"ByteBufVisitor"],[3,"UnitVisitor"],[3,"BoolVisitor"],[3,"PhantomDataVisitor"],[3,"IgnoredAny"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U32Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"BytesDeserializer"],[3,"ByteBufDeserializer"]]};
searchIndex["serde_json"]={"doc":"JSON and serialization","items":[[0,"builder","serde_json","JSON Builders",N,N],[3,"ArrayBuilder","serde_json::builder","This structure provides a simple interface for…",N,N],[3,"ObjectBuilder","","This structure provides a simple interface for…",N,N],[11,"new","","Construct an `ObjectBuilder`.",0,[[],["arraybuilder"]]],[11,"unwrap","","Return the constructed `Value`.",0,[[["self"]],["value"]]],[11,"push","","Insert a value into the array.",0,[[["self"],["t"]],["arraybuilder"]]],[11,"push_array","","Creates and passes an `ArrayBuilder` into a closure, then…",0,[[["self"],["f"]],["arraybuilder"]]],[11,"push_object","","Creates and passes an `ArrayBuilder` into a closure, then…",0,[[["self"],["f"]],["arraybuilder"]]],[11,"new","","Construct an `ObjectBuilder`.",1,[[],["objectbuilder"]]],[11,"unwrap","","Return the constructed `Value`.",1,[[["self"]],["value"]]],[11,"insert","","Insert a key-value pair into the object.",1,[[["self"],["s"],["v"]],["objectbuilder"]]],[11,"insert_array","","Creates and passes an `ObjectBuilder` into a closure, then…",1,[[["self"],["s"],["f"]],["objectbuilder"]]],[11,"insert_object","","Creates and passes an `ObjectBuilder` into a closure, then…",1,[[["self"],["s"],["f"]],["objectbuilder"]]],[0,"de","serde_json","JSON Deserialization",N,N],[3,"Deserializer","serde_json::de","A structure that deserializes JSON into Rust values.",N,N],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON…",N,N],[5,"from_iter","","Decodes a json value from an iterator over an iterator…",N,[[["i"]],["result"]]],[5,"from_reader","","Decodes a json value from a `std::io::Read`.",N,[[["r"]],["result"]]],[5,"from_slice","","Decodes a json value from a byte slice `&[u8]`.",N,N],[5,"from_str","","Decodes a json value from a `&str`.",N,[[["str"]],["result"]]],[11,"new","","Creates the JSON parser from an `std::iter::Iterator`.",2,[[["iter"]],["deserializer"]]],[11,"end","","The `Deserializer::end` method should be called after a…",2,[[["self"]],["result"]]],[11,"new","","Returns an `Iterator` of decoded JSON values from an…",3,[[["iter"]],["streamdeserializer"]]],[0,"error","serde_json","JSON Errors",N,N],[4,"ErrorCode","serde_json::error","The errors that can arise while parsing a JSON stream.",N,N],[13,"Custom","","Catchall for syntax error messages",4,N],[13,"InvalidType","","Incorrect type from value",4,N],[13,"InvalidValue","","Incorrect value",4,N],[13,"InvalidLength","","Invalid length",4,N],[13,"UnknownVariant","","Unknown variant in an enum.",4,N],[13,"UnknownField","","Unknown field in struct.",4,N],[13,"MissingField","","Struct is missing a field.",4,N],[13,"EOFWhileParsingList","","EOF while parsing a list.",4,N],[13,"EOFWhileParsingObject","","EOF while parsing an object.",4,N],[13,"EOFWhileParsingString","","EOF while parsing a string.",4,N],[13,"EOFWhileParsingValue","","EOF while parsing a JSON value.",4,N],[13,"ExpectedColon","","Expected this character to be a `':'`.",4,N],[13,"ExpectedListCommaOrEnd","","Expected this character to be either a `','` or a `]`.",4,N],[13,"ExpectedObjectCommaOrEnd","","Expected this character to be either a `','` or a `}`.",4,N],[13,"ExpectedSomeIdent","","Expected to parse either a `true`, `false`, or a `null`.",4,N],[13,"ExpectedSomeValue","","Expected this character to start a JSON value.",4,N],[13,"InvalidEscape","","Invalid hex escape code.",4,N],[13,"InvalidNumber","","Invalid number.",4,N],[13,"InvalidUnicodeCodePoint","","Invalid unicode code point.",4,N],[13,"KeyMustBeAString","","Object key is not a string.",4,N],[13,"LoneLeadingSurrogateInHexEscape","","Lone leading surrogate in hex escape.",4,N],[13,"TrailingCharacters","","JSON has non-whitespace trailing characters after the value.",4,N],[13,"UnexpectedEndOfHexEscape","","Unexpected end of hex excape.",4,N],[4,"Error","","This type represents all possible errors that can occur…",N,N],[13,"Syntax","","The JSON value had some syntatic error.",5,N],[13,"Io","","Some IO error occurred when serializing or deserializing a…",5,N],[13,"FromUtf8","","Some UTF8 error occurred while serializing or…",5,N],[6,"Result","","Helper alias for `Result` objects that return a JSON…",N,N],[0,"ser","serde_json","JSON Serialization",N,N],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",N,N],[3,"CompactFormatter","","This structure compacts a JSON value with no extra…",N,N],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human…",N,N],[5,"escape_bytes","","Serializes and escapes a `&[u8]` into a JSON string.",N,N],[5,"escape_str","","Serializes and escapes a `&str` into a JSON string.",N,[[["w"],["str"]],["result"]]],[5,"to_writer","","Encode the specified struct into a json `[u8]` writer.",N,[[["w"],["t"]],["result"]]],[5,"to_writer_pretty","","Encode the specified struct into a json `[u8]` writer.",N,[[["w"],["t"]],["result"]]],[5,"to_vec","","Encode the specified struct into a json `[u8]` buffer.",N,[[["t"]],["result",["vec"]]]],[5,"to_vec_pretty","","Encode the specified struct into a json `[u8]` buffer.",N,[[["t"]],["result",["vec"]]]],[5,"to_string","","Encode the specified struct into a json `String` buffer.",N,[[["t"]],["result",["string"]]]],[5,"to_string_pretty","","Encode the specified struct into a json `String` buffer.",N,[[["t"]],["result",["string"]]]],[8,"Formatter","","This trait abstracts away serializing the JSON control…",N,N],[10,"open","","Called when serializing a '{' or '['.",6,[[["self"],["w"],["u8"]],["result"]]],[10,"comma","","Called when serializing a ','.",6,[[["self"],["w"],["bool"]],["result"]]],[10,"colon","","Called when serializing a ':'.",6,[[["self"],["w"]],["result"]]],[10,"close","","Called when serializing a '}' or ']'.",6,[[["self"],["w"],["u8"]],["result"]]],[11,"new","","Creates a new JSON serializer.",7,[[["w"]],["self"]]],[11,"pretty","","Creates a new JSON pretty print serializer.",7,[[["w"]],["self"]]],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to…",7,[[["w"],["f"]],["self"]]],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",7,[[["self"]],["w"]]],[11,"new","","Construct a pretty printer formatter that defaults to…",8,[[],["self"]]],[11,"with_indent","","Construct a pretty printer formatter that uses the…",8,N],[0,"value","serde_json","JSON Value",N,N],[3,"Serializer","serde_json::value","Create a `serde::Serializer` that serializes a…",N,N],[3,"Deserializer","","Creates a `serde::Deserializer` from a `json::Value` object.",N,N],[4,"Value","","Represents a JSON value",N,N],[13,"Null","","Represents a JSON null value",9,N],[13,"Bool","","Represents a JSON Boolean",9,N],[13,"I64","","Represents a JSON signed integer",9,N],[13,"U64","","Represents a JSON unsigned integer",9,N],[13,"F64","","Represents a JSON floating point number",9,N],[13,"String","","Represents a JSON string",9,N],[13,"Array","","Represents a JSON array",9,N],[13,"Object","","Represents a JSON object",9,N],[5,"to_value","","Shortcut function to encode a `T` into a JSON `Value`",N,[[["t"]],["value"]]],[5,"from_value","","Shortcut function to decode a JSON `Value` into a `T`",N,[[["value"]],["result",["error"]]]],[11,"find","","If the `Value` is an Object, returns the value associated…",9,[[["self"],["str"]],["option",["value"]]]],[11,"find_path","","Attempts to get a nested Value Object for each key in…",9,N],[11,"lookup","","Looks up a value by path.",9,[[["self"],["str"]],["option",["value"]]]],[11,"search","","If the `Value` is an Object, performs a depth-first search…",9,[[["self"],["str"]],["option",["value"]]]],[11,"is_object","","Returns true if the `Value` is an Object. Returns false…",9,[[["self"]],["bool"]]],[11,"as_object","","If the `Value` is an Object, returns the associated…",9,[[["self"]],["option",["btreemap"]]]],[11,"as_object_mut","","If the `Value` is an Object, returns the associated…",9,[[["self"]],["option",["btreemap"]]]],[11,"is_array","","Returns true if the `Value` is an Array. Returns false…",9,[[["self"]],["bool"]]],[11,"as_array","","If the `Value` is an Array, returns the associated vector.…",9,[[["self"]],["option",["vec"]]]],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable…",9,[[["self"]],["option",["vec"]]]],[11,"is_string","","Returns true if the `Value` is a String. Returns false…",9,[[["self"]],["bool"]]],[11,"as_string","","If the `Value` is a String, returns the associated str.…",9,[[["self"]],["option",["str"]]]],[11,"is_number","","Returns true if the `Value` is a Number. Returns false…",9,[[["self"]],["bool"]]],[11,"is_i64","","Returns true if the `Value` is a i64. Returns false…",9,[[["self"]],["bool"]]],[11,"is_u64","","Returns true if the `Value` is a u64. Returns false…",9,[[["self"]],["bool"]]],[11,"is_f64","","Returns true if the `Value` is a f64. Returns false…",9,[[["self"]],["bool"]]],[11,"as_i64","","If the `Value` is a number, return or cast it to a i64.…",9,[[["self"]],["option",["i64"]]]],[11,"as_u64","","If the `Value` is a number, return or cast it to a u64.…",9,[[["self"]],["option",["u64"]]]],[11,"as_f64","","If the `Value` is a number, return or cast it to a f64.…",9,[[["self"]],["option",["f64"]]]],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false…",9,[[["self"]],["bool"]]],[11,"as_boolean","","If the `Value` is a Boolean, returns the associated bool.…",9,[[["self"]],["option",["bool"]]]],[11,"is_null","","Returns true if the `Value` is a Null. Returns false…",9,[[["self"]],["bool"]]],[11,"as_null","","If the `Value` is a Null, returns (). Returns None…",9,[[["self"]],["option"]]],[11,"new","","Construct a new `Serializer`.",10,[[],["serializer"]]],[11,"unwrap","","Unwrap the `Serializer` and return the `Value`.",10,[[["self"]],["value"]]],[11,"new","","Creates a new deserializer instance for deserializing the…",11,[[["value"]],["deserializer"]]],[11,"from","serde_json::builder","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","serde_json::de","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","serde_json::error","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","serde_json::ser","",7,[[["t"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"from","serde_json::value","",10,[[["t"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,N],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"open","serde_json::ser","",12,[[["self"],["w"],["u8"]],["result"]]],[11,"comma","","",12,[[["self"],["w"],["bool"]],["result"]]],[11,"colon","","",12,[[["self"],["w"]],["result"]]],[11,"close","","",12,[[["self"],["w"],["u8"]],["result"]]],[11,"open","","",8,[[["self"],["w"],["u8"]],["result"]]],[11,"comma","","",8,[[["self"],["w"],["bool"]],["result"]]],[11,"colon","","",8,[[["self"],["w"]],["result"]]],[11,"close","","",8,[[["self"],["w"],["u8"]],["result"]]],[11,"from","serde_json::error","",5,[[["error"]],["error"]]],[11,"from","","",5,[[["fromutf8error"]],["error"]]],[11,"from","","",5,[[["error"]],["error"]]],[11,"next","serde_json::de","",3,[[["self"]],["option",["result"]]]],[11,"eq","serde_json::error","",4,[[["self"],["errorcode"]],["bool"]]],[11,"ne","","",4,[[["self"],["errorcode"]],["bool"]]],[11,"eq","serde_json::value","",9,[[["self"],["value"]],["bool"]]],[11,"ne","","",9,[[["self"],["value"]],["bool"]]],[11,"clone","serde_json::error","",4,[[["self"]],["errorcode"]]],[11,"clone","serde_json::value","",9,[[["self"]],["value"]]],[11,"fmt","serde_json::error","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::value","Serializes a json value into a string",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde_json::error","",5,[[["self"],["formatter"]],["result"]]],[11,"description","","",5,[[["self"]],["str"]]],[11,"cause","","",5,[[["self"]],["option",["error"]]]],[11,"serialize","serde_json::value","",9,[[["self"],["s"]],["result"]]],[11,"serialize_bool","serde_json::ser","",7,[[["self"],["bool"]],["result"]]],[11,"serialize_isize","","",7,[[["self"],["isize"]],["result"]]],[11,"serialize_i8","","",7,[[["self"],["i8"]],["result"]]],[11,"serialize_i16","","",7,[[["self"],["i16"]],["result"]]],[11,"serialize_i32","","",7,[[["self"],["i32"]],["result"]]],[11,"serialize_i64","","",7,[[["self"],["i64"]],["result"]]],[11,"serialize_usize","","",7,[[["self"],["usize"]],["result"]]],[11,"serialize_u8","","",7,[[["self"],["u8"]],["result"]]],[11,"serialize_u16","","",7,[[["self"],["u16"]],["result"]]],[11,"serialize_u32","","",7,[[["self"],["u32"]],["result"]]],[11,"serialize_u64","","",7,[[["self"],["u64"]],["result"]]],[11,"serialize_f32","","",7,[[["self"],["f32"]],["result"]]],[11,"serialize_f64","","",7,[[["self"],["f64"]],["result"]]],[11,"serialize_char","","",7,[[["self"],["char"]],["result"]]],[11,"serialize_str","","",7,[[["self"],["str"]],["result"]]],[11,"serialize_none","","",7,[[["self"]],["result"]]],[11,"serialize_some","","",7,[[["self"],["v"]],["result"]]],[11,"serialize_unit","","",7,[[["self"]],["result"]]],[11,"serialize_newtype_struct","","Override `visit_newtype_struct` to serialize newtypes…",7,[[["self"],["str"],["t"]],["result"]]],[11,"serialize_unit_variant","","",7,[[["self"],["str"],["usize"],["str"]],["result"]]],[11,"serialize_newtype_variant","","",7,[[["self"],["str"],["usize"],["str"],["t"]],["result"]]],[11,"serialize_seq","","",7,[[["self"],["v"]],["result"]]],[11,"serialize_tuple_variant","","",7,[[["self"],["str"],["usize"],["str"],["v"]],["result"]]],[11,"serialize_seq_elt","","",7,[[["self"],["t"]],["result"]]],[11,"serialize_map","","",7,[[["self"],["v"]],["result"]]],[11,"serialize_struct_variant","","",7,[[["self"],["str"],["usize"],["str"],["v"]],["result"]]],[11,"serialize_map_elt","","",7,[[["self"],["k"],["v"]],["result"]]],[11,"serialize_bool","serde_json::value","",10,[[["self"],["bool"]],["result",["error"]]]],[11,"serialize_i64","","",10,[[["self"],["i64"]],["result",["error"]]]],[11,"serialize_u64","","",10,[[["self"],["u64"]],["result",["error"]]]],[11,"serialize_f64","","",10,[[["self"],["f64"]],["result",["error"]]]],[11,"serialize_char","","",10,[[["self"],["char"]],["result",["error"]]]],[11,"serialize_str","","",10,[[["self"],["str"]],["result",["error"]]]],[11,"serialize_none","","",10,[[["self"]],["result",["error"]]]],[11,"serialize_some","","",10,[[["self"],["v"]],["result",["error"]]]],[11,"serialize_unit","","",10,[[["self"]],["result",["error"]]]],[11,"serialize_unit_variant","","",10,[[["self"],["str"],["usize"],["str"]],["result",["error"]]]],[11,"serialize_newtype_variant","","",10,[[["self"],["str"],["usize"],["str"],["t"]],["result",["error"]]]],[11,"serialize_seq","","",10,[[["self"],["v"]],["result",["error"]]]],[11,"serialize_tuple_variant","","",10,[[["self"],["str"],["usize"],["str"],["v"]],["result",["error"]]]],[11,"serialize_seq_elt","","",10,[[["self"],["t"]],["result",["error"]]]],[11,"serialize_map","","",10,[[["self"],["v"]],["result",["error"]]]],[11,"serialize_struct_variant","","",10,[[["self"],["str"],["usize"],["str"],["v"]],["result",["error"]]]],[11,"serialize_map_elt","","",10,[[["self"],["k"],["v"]],["result",["error"]]]],[11,"custom","serde_json::error","Raised when there is general error when deserializing a…",5,[[["t"]],["error"]]],[11,"deserialize","serde_json::value","",9,[[["d"]],["result",["value"]]]],[11,"custom","serde_json::error","",5,[[["t"]],["error"]]],[11,"end_of_stream","","",5,[[],["error"]]],[11,"invalid_type","","",5,[[["type"]],["error"]]],[11,"invalid_value","","",5,[[["str"]],["error"]]],[11,"invalid_length","","",5,[[["usize"]],["error"]]],[11,"unknown_variant","","",5,[[["str"]],["error"]]],[11,"unknown_field","","",5,[[["str"]],["error"]]],[11,"missing_field","","",5,[[["str"]],["error"]]],[11,"visit_variant","serde_json::de","",2,[[["self"]],["result"]]],[11,"visit_unit","","",2,[[["self"]],["result"]]],[11,"visit_newtype","","",2,[[["self"]],["result"]]],[11,"visit_tuple","","",2,[[["self"],["usize"],["v"]],["result"]]],[11,"visit_struct","","",2,N],[11,"deserialize","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","Parses a `null` as a None, and any other values as a…",2,[[["self"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","Parses a newtype struct as the underlying value.",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_enum","","Parses an enum as an object like `{\"$KEY\":$VALUE}`, where…",2,N],[11,"deserialize","serde_json::value","",11,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_option","","",11,[[["self"],["v"]],["result",["error"]]]],[11,"deserialize_enum","","",11,N],[11,"deserialize_newtype_struct","","",11,[[["self"],["str"],["v"]],["result"]]]],"paths":[[3,"ArrayBuilder"],[3,"ObjectBuilder"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"ErrorCode"],[4,"Error"],[8,"Formatter"],[3,"Serializer"],[3,"PrettyFormatter"],[4,"Value"],[3,"Serializer"],[3,"Deserializer"],[3,"CompactFormatter"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);
